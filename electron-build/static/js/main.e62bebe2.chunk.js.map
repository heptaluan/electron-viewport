{"version":3,"sources":["components/common/IconFont/iconFont.js","components/common/CustomOverlay/CustomOverlay.js","util/index.js","components/ViewerMain/ViewerMain.js","hook/useWindowSize.js","components/LeftSidePanel/LeftSidePanel.js","components/common/IconFont/index.js","components/ModalContent/ModalContent.js","components/Toolbar/Toolbar.js","components/MiddleSidePanel/MiddleSidePanel.js","components/common/MarkNoduleTool/toolColors.js","components/common/MarkNoduleTool/toolStyle.js","components/common/MarkNoduleTool/util.js","components/common/MarkNoduleTool/MarkNoduleTool.js","components/common/AddNoduleTool/toolColors.js","components/common/AddNoduleTool/toolStyle.js","components/common/AddNoduleTool/util.js","components/common/AddNoduleTool/AddNoduleTool.js","components/common/AddNewNode/AddNewNode.js","util/sqlite.js","pages/Viewer/Viewer.js","components/SelectFile/SelectFile.js","pages/StudyList/StudyList.js","App.js","reportWebVitals.js","initCornerstone.js","index.js"],"names":["a","t","h","l","o","i","e","c","document","getElementsByTagName","length","getAttribute","__iconfont__svg__cssinject__","write","console","log","s","createElement","innerHTML","setAttribute","style","position","width","height","overflow","body","firstChild","parentNode","insertBefore","n","appendChild","addEventListener","indexOf","readyState","setTimeout","removeEventListener","attachEvent","d","documentElement","doScroll","onreadystatechange","window","CustomOverlay","props","className","imageIndex","stackSize","Number","windowWidth","toFixed","windowCenter","readFileInfo","file","arrayBuffer","fs","readFileSync","path","buffer","dcmjs","data","DicomMessage","readFile","dicomDateTimeToLocale","dateTime","divide","date","Date","substring","time","localeDate","toLocaleDateString","dicomTimeToLocale","formatFile","fileList","split","imagesIDConfig","existsSync","fileName","pop","File","type","imageId","cornerstoneWADOImageLoader","wadouri","fileManager","add","push","ViewerThumbnail","canvasRef","imageIdIndex","createRef","useState","isLoading","setLoading","image","setImage","useEffect","cornerstone","renderToCanvas","current","dcmID","loadImage","then","res","catch","err","ref","minWidth","minHeight","flex","ViewerMain","size","clientWidth","clientHeight","setSize","onResize","useCallback","useWindowSize","viewportOverlayComponent","onElementEnabled","elementEnabledEvt","handleElementEnabledEvt","imageIds","imagesConfig","LeftSidePanel","thumbnailList","setThumbnailList","tempList","patientInfo","seriesInfo","methods","item","map","index","active","getSelectedSeries","onClick","seriesDescription","cover","seriesNo","color","frameNum","key","IconFont","createFromIconfontCN","scriptUrl","iconfont","ModalContent","selectedPath","globalData","framePath","info","dict","meta","textFormat","txt","toString","title","column","Item","label","toolbarList","id","text","icon","fontSize","checked","filter","Toolbar","visible","setVisible","state","setstate","setShowViewer","handleToolbarClick","handleExportExcel","marginRight","centered","onOk","onCancel","footer","TextArea","Input","MiddleSidePanel","patientName","patientGender","patientID","acquisitionDate","noduleList","disabled","num","onCheckChange","handleListClick","onChange","diameter","suggest","noduleNum","placeholder","bordered","rows","maxLength","resize","value","noduleInfo","handleTextareaOnChange","defaultColor","activeColor","fillColor","toolColors","setFillColor","getFillColor","setToolColor","getToolColor","setActiveColor","getActiveColor","getColorIfActive","defaultWidth","activeWidth","toolStyle","setToolWidth","getToolWidth","setActiveWidth","getActiveWidth","getToolState","element","toolName","getEnabledElement","toolStateManager","getElementToolStateManager","get","rotatePoint","point","center","angle","angleRadians","Math","PI","x","cos","sin","y","context","options","fn","lineWidth","fillStyle","lineDash","shouldDrawLines","beginPath","strokeStyle","undefined","setLineDash","fill","stroke","drawRect","corner1","corner2","coordSystem","initialRotation","pixelToCanvas","viewport","getViewport","scale","translation","rotation","centerPoint","abs","w","min","corner3","corner4","moveTo","lineTo","calculateSUV","storedPixelValue","skipRescale","patientStudyModule","metaData","seriesModule","modality","modalityPixelValue","slope","intercept","patientWeight","petSequenceModule","radiopharmaceuticalInfo","startTime","radiopharmaceuticalStartTime","totalDose","radionuclideTotalDose","halfLife","radionuclideHalfLife","seriesAcquisitionTime","seriesTime","acquisitionTimeInSeconds","fracToDec","fractionalSeconds","seconds","minutes","hours","injectionStartTimeInSeconds","durationInSeconds","correctedDose","exp","suv","fractionalValue","parseFloat","MarkNoduleTool","defaultProps","name","supportedInteractionTypes","configuration","drawHandles","drawHandlesOnHover","hideHandlesIfMoving","renderDashed","eventData","invalidated","handles","start","currentPoints","highlight","end","coords","interactionType","pixelSpacing","imagePlane","rowPixelSpacing","rowImagePixelSpacing","colPixelSpacing","columnPixelSpacing","colImagePixelSpacing","getPixelSpacing","stats","meanStdDevSUV","roiCoordinates","startHandle","endHandle","left","top","roiMeanStdDev","sp","rectangle","sum","sumSquared","count","max","mean","variance","stdDev","sqrt","_calculateRectangleStats","getPixels","area","perimeter","_calculateStats","cachedStats","evt","toolData","currentTarget","this","detail","save","restore","draw","canvas","getContext","setTransform","getNewContext","canvasContext","rectOptions","csTools","importInternal","AddNoduleTool","Option","Select","AddNewNode","currentImageIdIndex","toolList","Group","lung","updateToolList","target","onLungChange","uuid","lobe","onLobeChange","val","marginTop","handleToolListTextareaChange","onBlur","handleToolListTextareaBlur","dbSlot","resourceDir","resolve","dbDir","filePath","join","sqlite","verbose","resourceExists","exists","mkdirSync","openSync","sqlite3","Database","createTable","sql","serialize","run","insertData","objects","callback","stmt","prepare","temp","k","hasOwnProperty","finalize","queryData","all","SQLContainer","queryStudyByPatientID","DBFunction","querySeriesByStudyID","studyID","queryNodeList","Viewer","setImagesConfig","setNoduleList","noduleMapList","setNoduleMapList","setCurrentImageIdIndex","cornerstoneElement","setCornerstoneElement","setPatientID","nodeRef","useRef","find","imageIDList","formatNodeData","resultInfo","cornerstoneTools","clearToolState","updateImage","nodulesList","nodulesMapList","nodeBox","noduleName","lungLocation","lobeLocation","featureLabel","featureLabelG","noduleSize","maxHu","minHu","meanHu","startX","startY","endX","endY","openDownload","blob","Blob","URL","createObjectURL","event","aLink","href","download","MouseEvent","createEvent","initMouseEvent","dispatchEvent","workbook2blob","workbook","wbout","XLSX","bookType","bookSST","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","addNodeTool","checkItme","checkNode","measurementData","addToolState","handleCheckedListClick","el","corElement","changeActiveImage","setToolActive","mouseButtonMask","changeToolActive","hflip","setViewport","vflip","playClip","stopClip","reset","windowChange","getImage","displayImage","addStackStateManager","saveResults","postData","diameterNorm","centerHu","formatPostData","message","success","draggleRef","React","modalVisible","setModalVisible","modalDisabled","setModalDisabled","bottom","right","modalBounds","setModalBounds","setToolList","showMarkDialog","tool","mark","getElementById","classList","contains","formatNewNodeData","handleCloseCallback","removeToolState","viewportDefault","getDefaultViewportForImage","voiLUT","voi","queryAllNodeList","warn","sheet","json_to_sheet","wb","book_new","book_append_sheet","workbookBlob","selectedSeries","toolFlag","newImage","curImageId","findIndex","WwwcTool","addTool","StackScrollMouseWheelTool","RectangleRoiTool","EraserTool","MagnifyTool","EllipticalRoiTool","AngleTool","LengthTool","PanTool","ZoomTool","setToolEnable","activeTool","querySelector","dataset","setActiveToolState","cursor","onMouseOver","onMouseOut","onFocus","okText","cancelText","maskClosable","newNoduleList","pow","newNoduleMapList","modalRender","modal","bounds","onStart","uiData","targetRect","getBoundingClientRect","SelectFile","patientList","studyList","seriesList","creatPatient","Value","replace","patientBirthday","institution","deviceManufacturer","deviceModelName","addTime","studyNum","studyInfo","createStudy","studyDescription","sequenceNum","createSeries","checkDICMType","dicmBox","reader","FileReader","Promise","reject","readAsArrayBuffer","onload","DONE","array","result","String","fromCharCode","openDir","inputObj2","files","fileArr","Set","tempArr","Array","from","promises","forEach","ele","now","toLocaleString","createDataTables","studyEle","sEle","pEle","removeDuplicates","alert","reason","removeChild","error","inputObj","click","importHandler","output","dicomColumns","dataIndex","defaultSortOrder","sorter","b","testColumns","listColumns","StudyList","patientData","setPatientData","studyData","setStudyData","seriesData","setSeriesData","importDICOM","selectedData","setSelectedData","queryPatientData","getDicomFromDB","getStudyFromDB","getSeriesFromDB","getAllByPatientID","seriesGetAll","selectedIndex","isArray","setData","addDicomFromUpload","concat","patientCallback","res1","res2","res3","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","columns","dataSource","onRow","patientRowClicked","onDoubleClick","patientGetAll","studyRowClicked","studyGetAll","App","showViewer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","external","Hammer","cornerstoneMath","init","textStyle","setFont","store","touchProximity","dicomParser","webWorkerManager","initialize","maxWebWorkers","navigator","hardwareConcurrency","startWebWorkersOnDemand","taskConfiguration","decodeTask","initializeCodecsOnStartup","usePDFJS","strict","ReactDOM","render"],"mappings":"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","file":"static/js/main.e62bebe2.chunk.js","sourcesContent":["/* eslint-disable */\r\n!function(a){var t,h,l,o,i,e='<svg><symbol id=\"icon-juxing1\" viewBox=\"0 0 1024 1024\"><path d=\"M273.9 168.3H739v37.1H273.9zM273.9 819.6H739v37.1H273.9zM165.812 740.898v-465.1h37.1v465.1zM821.11 740.896v-465.1h37.1v465.1z\" fill=\"#748696\" ></path><path d=\"M184.7 66.2c-66.8 0-121 54.2-121 121s54.2 121 121 121 121-54.2 121-121-54.1-121-121-121z m-0.1 203.5c-45.7 0-82.7-37-82.7-82.7s37-82.7 82.7-82.7 82.7 37 82.7 82.7c0.1 45.7-37 82.7-82.7 82.7zM184.7 717.5c-66.8 0-121 54.2-121 121s54.2 121 121 121 121-54.2 121-121-54.1-121-121-121z m-0.1 203.6c-45.7 0-82.7-37-82.7-82.7s37-82.7 82.7-82.7 82.7 37 82.7 82.7c0.1 45.6-37 82.7-82.7 82.7zM840 717.5c-66.8 0-121 54.2-121 121s54.2 121 121 121 121-54.2 121-121-54.1-121-121-121z m-0.1 203.6c-45.7 0-82.7-37-82.7-82.7s37-82.7 82.7-82.7 82.7 37 82.7 82.7c0.1 45.6-37 82.7-82.7 82.7zM840 66.2c-66.8 0-121 54.2-121 121s54.2 121 121 121 121-54.2 121-121-54.1-121-121-121z m-0.1 203.5c-45.7 0-82.7-37-82.7-82.7s37-82.7 82.7-82.7 82.7 37 82.7 82.7c0.1 45.7-37 82.7-82.7 82.7z\" fill=\"#748696\" ></path></symbol><symbol id=\"icon-move\" viewBox=\"0 0 1024 1024\"><path d=\"M486.4 776.533333v-213.333333H247.466667v106.666667L85.333333 512l162.133334-162.133333V512h238.933333V247.466667H349.866667L512 85.333333l162.133333 162.133334h-132.266666V512h238.933333V349.866667L938.666667 512l-162.133334 162.133333v-106.666666h-238.933333v213.333333h132.266667L512 938.666667l-162.133333-162.133334h136.533333z\"  ></path></symbol><symbol id=\"icon-reset_defalut\" viewBox=\"0 0 1024 1024\"><path d=\"M193.070545 70.353455l5.422546 0.930909A34.909091 34.909091 0 0 1 226.862545 111.709091l-0.023272 0.069818-12.869818 72.541091a448.698182 448.698182 0 0 1 293.888-108.939636c246.830545 0 447.022545 197.911273 447.022545 442.181818s-200.192 442.181818-447.022545 442.181818c-160.186182 0-305.687273-84.084364-385.466182-218.158545a37.794909 37.794909 0 0 1 13.358545-51.921455 38.167273 38.167273 0 0 1 52.154182 13.288727c66.210909 111.243636 186.903273 180.992 319.953455 180.992 204.869818 0 370.850909-164.096 370.850909-366.382545S712.727273 151.179636 507.857455 151.179636c-107.287273 0-206.801455 45.265455-276.317091 121.995637h141.498181a34.909091 34.909091 0 0 1 0 69.818182h-209.454545c-2.606545 0-5.189818-0.279273-7.656727-0.837819a34.629818 34.629818 0 0 1-5.259637-0.512l-5.422545-0.930909a34.909091 34.909091 0 0 1-28.346182-40.494545L152.669091 98.629818a34.909091 34.909091 0 0 1 40.401454-28.276363z\"  ></path></symbol><symbol id=\"icon-zoom\" viewBox=\"0 0 1024 1024\"><path d=\"M192 720v96h160v64H128v-160h64z m704 0v160h-224v-64h160v-96h64z m0-576v160h-64v-96h-160v-64h224z m-544 0v64H192v96H128v-160h224z\"  ></path></symbol><symbol id=\"icon-back\" viewBox=\"0 0 1024 1024\"><path d=\"M363.840919 472.978737C336.938714 497.358861 337.301807 537.486138 364.730379 561.486138L673.951902 832.05497C682.818816 839.813519 696.296418 838.915012 704.05497 830.048098 711.813519 821.181184 710.915012 807.703582 702.048098 799.94503L392.826577 529.376198C384.59578 522.174253 384.502227 511.835287 392.492414 504.59418L702.325747 223.807723C711.056111 215.895829 711.719614 202.404616 703.807723 193.674252 695.895829 184.943889 682.404617 184.280386 673.674253 192.192278L363.840919 472.978737Z\"  ></path></symbol><symbol id=\"icon-searchclose\" viewBox=\"0 0 1024 1024\"><path d=\"M517.08411984 479.11475483L301.90637831 263.93753776a26.85237631 26.85237631 0 1 0-37.98667221 37.95153335l215.17669262 215.19504873L263.91970607 732.27864411a26.85237631 26.85237631 0 1 0 37.96936504 37.96884057l215.19504878-215.17669264 215.19504866 215.17669264a26.85237631 26.85237631 0 1 0 37.9688406-37.95100889l-215.17669262-215.2123559 215.17669262-215.1772171a26.85237631 26.85237631 0 1 0-37.9688406-37.96936505L517.10195147 479.11475483z\"  ></path></symbol><symbol id=\"icon-qingchuhuancun\" viewBox=\"0 0 1024 1024\"><path d=\"M380.220734 960.178685v-223.356732a32.673899 32.673899 0 0 1 65.283983 0V960.178685h130.504148v-223.356732a32.673899 32.673899 0 0 1 65.283982 0V960.178685h195.724314V513.46522H184.368788v446.713465h195.851946z m-261.008296-463.880025a126.483727 126.483727 0 0 1-60.753031-143.522655A130.057435 130.057435 0 0 1 184.304972 258.200383h195.915762V130.567964a130.567964 130.567964 0 0 1 261.135929 0v127.632419h195.724314a129.993618 129.993618 0 0 1 126.10083 94.575622 126.483727 126.483727 0 0 1-60.753032 143.586471V960.178685a64.582004 64.582004 0 0 1-65.283982 63.81621H184.368788a64.582004 64.582004 0 0 1-65.283982-63.81621V496.362476zM836.825712 449.649011a63.816209 63.816209 0 1 0 0-127.632419h-261.008296V130.567964a65.283982 65.283982 0 0 0-130.504148 0v191.448628h-261.008296a63.816209 63.816209 0 1 0 0 127.632419h652.456924z\"  ></path></symbol><symbol id=\"icon-asmkticon0229\" viewBox=\"0 0 1024 1024\"><path d=\"M512 128c-211.84 0-384 172.16-384 384s172.16 384 384 384 384-172.16 384-384S723.84 128 512 128zM512 857.6c-190.72 0-345.6-154.88-345.6-345.6s154.88-345.6 345.6-345.6 345.6 154.88 345.6 345.6S702.72 857.6 512 857.6z\"  ></path><path d=\"M654.72 489.6 454.4 374.4c-3.84-2.56-8.32-3.2-12.8-3.2-13.44 0-25.6 10.88-25.6 25.6l0 231.04c0 14.72 12.16 25.6 25.6 25.6 4.48 0 8.32-1.28 12.8-3.2l200.32-115.84C672 524.16 672 499.84 654.72 489.6zM454.4 605.44 454.4 418.56 616.32 512 454.4 605.44z\"  ></path></symbol><symbol id=\"icon-shuipingfanzhuan\" viewBox=\"0 0 1024 1024\"><path d=\"M799.285029 511.225357 668.763346 380.704698 668.763346 465.179648 354.608344 465.179648 354.608344 380.704698 224.087685 511.227404 354.608344 641.749086 354.608344 558.675042 668.763346 558.675042 668.763346 641.749086Z\"  ></path></symbol><symbol id=\"icon-chuizhifanzhuan\" viewBox=\"0 0 1024 1024\"><path d=\"M173 514.3534 849.277 519.2724 849.561 477.8214 173.283 472.9034Z\"  ></path><path d=\"M430.5251 602.0503 429.2501 806.1233 293.1201 806.1233 513.1221 1024.0003 731.8281 806.1233 595.7591 806.1233 595.7591 602.0503 430.5251 602.0503ZM393.8721 847.5743 470.4571 847.5743 471.7321 643.5003 554.3091 643.5003 554.3091 847.5743 631.4821 847.5743 513.0411 965.5893 393.8721 847.5743Z\"  ></path><path d=\"M513.0902-0.0001 343.4972 167.9479 449.8482 167.9479 451.1392 372.0359 575.0422 372.0359 575.0422 167.9479 681.6522 167.9479Z\"  ></path></symbol><symbol id=\"icon-fangda\" viewBox=\"0 0 1024 1024\"><path d=\"M444.928 445.44v-96.768c0-13.312 10.752-24.064 24.064-24.064s24.064 10.752 24.064 24.064V445.44h103.936c10.24 0 17.92 10.752 17.92 24.064s-8.192 24.064-17.92 24.064h-103.936v96.768c0 13.312-10.752 24.064-24.064 24.064s-24.064-10.752-24.064-24.064v-96.768H343.04c-9.728 0-17.92-10.752-17.92-24.064s8.192-24.064 17.92-24.064h101.888z m246.784 211.968l145.92 145.92c6.144 6.144 8.704 14.848 6.144 23.552-2.048 8.192-8.704 14.848-16.896 16.896-8.192 2.048-17.408 0-23.552-6.144l-145.92-145.92c-52.224 44.544-118.784 68.608-187.392 68.608-160.256 0-290.816-130.048-290.816-290.816 0-160.256 130.048-290.816 290.816-290.816 160.256 0 290.816 130.048 290.816 290.816-0.512 71.68-26.112 137.216-69.12 187.904z m-221.696 54.784c133.632 0 242.176-108.544 242.176-242.176 0-133.632-108.544-242.176-242.176-242.176-133.632 0-242.176 108.544-242.176 242.176 0 133.632 108.032 242.176 242.176 242.176z m0 0\"  ></path></symbol><symbol id=\"icon-yuanxing\" viewBox=\"0 0 1024 1024\"><path d=\"M511.28793597 879.48493867c-203.64442905 0-369.30957687-165.66430491-369.30957687-369.31463527 0-203.64442905 165.66430491-369.30957687 369.30957688-369.30957687 203.65033117 0 369.31463608 165.66430491 369.31463607 369.30957688 0 203.65033117-165.66430491 369.31463608-369.31463608 369.31463525z m0-685.86654502c-174.55140417 0-316.55190893 142.00050476-316.55190893 316.55190975 0 174.55646338 142.00050476 316.55696814 316.55190893 316.55696814 174.55646338 0 316.55696814-142.00050476 316.55696814-316.55696814 0-174.55140417-142.00050476-316.55190893-316.55696813-316.55190975z m0 0\"  ></path></symbol><symbol id=\"icon-fanzhuan\" viewBox=\"0 0 1024 1024\"><path d=\"M513.422 153.6a21.333 21.333 0 0 0-21.333 21.333v674.134a21.333 21.333 0 0 0 42.667 0V174.933a21.333 21.333 0 0 0-21.334-21.333zM364.09 295.822a59.733 59.733 0 0 0-64 12.8L126.578 477.867a56.889 56.889 0 0 0-17.067 41.244 56.889 56.889 0 0 0 17.067 41.245L301.51 731.022a58.311 58.311 0 0 0 39.822 15.645 59.733 59.733 0 0 0 22.756-4.267 56.889 56.889 0 0 0 36.978-54.044V347.022a56.889 56.889 0 0 0-36.978-51.2zM358.4 689.778A15.644 15.644 0 0 1 348.444 704a17.067 17.067 0 0 1-18.488-2.844L155.022 530.489a15.644 15.644 0 0 1-4.266-11.378 15.644 15.644 0 0 1 4.266-11.378l174.934-170.666a17.067 17.067 0 0 1 18.488-2.845 15.644 15.644 0 0 1 9.956 14.222z m539.022-211.911L722.49 307.2a59.733 59.733 0 0 0-64-12.8 56.889 56.889 0 0 0-36.978 54.044v341.334a56.889 56.889 0 0 0 36.978 54.044 59.733 59.733 0 0 0 22.755 4.267 58.311 58.311 0 0 0 41.245-17.067l174.933-170.666a56.889 56.889 0 0 0 17.067-41.245 56.889 56.889 0 0 0-17.067-41.244z m-29.866 51.2L692.622 699.733a17.067 17.067 0 0 1-18.489 2.845 15.644 15.644 0 0 1-9.955-14.222V347.022a15.644 15.644 0 0 1 9.955-14.222h8.534a17.067 17.067 0 0 1 11.377 4.267l174.934 170.666a15.644 15.644 0 0 1 4.266 11.378 15.644 15.644 0 0 1-4.266 11.378z\"  ></path></symbol><symbol id=\"icon-jiaoduceliang\" viewBox=\"0 0 1024 1024\"><path d=\"M85.869714 723.675429C38.326857 723.675429 0 762.148571 0 809.545143 0 856.941714 38.326857 895.268571 85.869714 895.268571s85.869714-38.326857 85.869715-85.869714-38.473143-85.723429-85.869715-85.723428z m0 127.707428c-22.966857 0-41.837714-18.724571-41.837714-41.837714s18.724571-41.837714 41.837714-41.837714 41.837714 18.724571 41.837715 41.837714c-0.146286 23.259429-18.724571 41.837714-41.837715 41.837714z\"  ></path><path d=\"M937.252571 723.675429c-40.082286 0-73.874286 27.648-83.236571 64.804571H153.014857v41.837714H854.308571c9.362286 37.302857 43.008 64.804571 83.236572 64.804572 47.396571 0 85.869714-38.326857 85.869714-85.869715-0.146286-47.250286-38.765714-85.577143-86.162286-85.577142z m0 127.707428c-22.966857 0-41.837714-18.724571-41.837714-41.837714s18.724571-41.837714 41.837714-41.837714c22.966857 0 41.837714 18.724571 41.837715 41.837714 0 23.259429-18.578286 41.837714-41.837715 41.837714z\"  ></path><path d=\"M626.834286 163.401143c-28.525714 28.525714-32.768 71.826286-13.019429 104.740571l-495.908571 495.616 29.549714 29.549715 495.908571-495.616c32.914286 19.748571 76.214857 15.506286 104.740572-13.019429 33.499429-33.499429 33.499429-87.917714 0-121.270857-33.353143-33.499429-87.771429-33.645714-121.270857 0z m90.258285 90.258286c-16.384 16.384-42.861714 16.384-58.953142 0-16.384-16.384-16.384-42.861714 0-58.953143 16.384-16.384 42.861714-16.384 58.953142 0 16.237714 16.091429 16.237714 42.569143 0 58.953143z\"  ></path><path d=\"M397.165714 524.580571s130.779429 104.448 137.508572 275.163429l-35.254857 2.779429s-6.582857-158.134857-130.779429-253.074286l28.525714-24.868572z\"  ></path></symbol><symbol id=\"icon-shizi-\" viewBox=\"0 0 1024 1024\"><path d=\"M461.15 83.21h101.92v285.81H461.15z\"  ></path><path d=\"M548 98.21l0.09 255.8h-71.9l-0.08-255.81H548m30-30H446.1v30l0.09 255.8v30h131.93v-30L578 98.2v-30z\" fill=\"#FFFFFF\" ></path><path d=\"M83.04 461.13h283.75v102H83.04z\"  ></path><path d=\"M351.79 476.12v72H98v-72h253.79m30-30H68v132h313.79v-132z\" fill=\"#FFFFFF\" ></path><path d=\"M657 461.37h285.87v102H657z\"  ></path><path d=\"M927.87 476.37v72H672v-72h255.87m30-30H642v132h315.87v-132z\" fill=\"#FFFFFF\" ></path><path d=\"M461.12 655.98h101.95v285.65H461.12z\"  ></path><path d=\"M548.05 671l0.05 255.64h-72V670.99h71.95m30-30h-132v315.64h132V641z\" fill=\"#FFFFFF\" ></path><path d=\"M511.5 511.5m-40.52429 40.52429a57.31 57.31 0 1 0 81.04858-81.04858 57.31 57.31 0 1 0-81.04858 81.04858Z\"  ></path><path d=\"M511.5 469.19a42.31 42.31 0 1 1-42.31 42.31 42.31 42.31 0 0 1 42.31-42.31m0-30a72.31 72.31 0 1 0 72.31 72.31 72.39 72.39 0 0 0-72.31-72.31z\" fill=\"#FFFFFF\" ></path></symbol><symbol id=\"icon-jujiao\" viewBox=\"0 0 1024 1024\"><path d=\"M512 170.688a341.312 341.312 0 1 1 0 682.624A341.312 341.312 0 0 1 512 170.688M512 128a384 384 0 1 0 0 768A384 384 0 0 0 512 128z\"  ></path><path d=\"M298.688 533.312h-128a21.312 21.312 0 0 1 0-42.624h128a21.312 21.312 0 1 1 0 42.624z m554.624 0h-128a21.312 21.312 0 0 1 0-42.624h128a21.312 21.312 0 0 1 0 42.624zM512 320a21.312 21.312 0 0 1-21.312-21.312v-128a21.312 21.312 0 0 1 42.624 0v128C533.312 310.4 523.776 320 512 320z m0 554.688a21.312 21.312 0 0 1-21.312-21.376v-128a21.312 21.312 0 0 1 42.624 0v128a21.312 21.312 0 0 1-21.312 21.376z\"  ></path></symbol><symbol id=\"icon-fanzhuan1\" viewBox=\"0 0 1024 1024\"><path d=\"M896 494.08000001l0 35.32799999-768 0 0-35.32799999zM305.152 417.28L668.16 417.28000001l19.968 0.51199999 5.12-9.216 5.12000001-8.704L496.64 51.2l-20.48 0-190.976 331.264-10.24 17.408 5.12 8.704 5.12 8.704 19.968 0z m20.47999999-35.328L486.4 103.424l160.768 278.528-321.53600001 0zM688.128 642.048l10.24000001-17.92-5.12000001-8.704-5.12-8.704L304.64 606.72l-19.968-0.512-5.12 9.216-5.12 8.704L476.16 972.8l20.48 0 191.488-330.752z m-362.49600001 0L647.168 642.048l-160.768 278.528-160.76800001-278.528z\"  ></path></symbol><symbol id=\"icon-02-chizi\" viewBox=\"0 0 1024 1024\"><path d=\"M894.151111 351.089778L351.089778 894.151111l-221.240889-221.240889 80.469333-80.469333 20.110222-20.110222 40.220445-40.220445 20.110222-20.110222 40.220445-40.220444 20.110222-20.110223 40.220444-40.248889 20.110222-20.110222 40.220445-40.220444 20.110222-20.110222 40.220445-40.220445 20.110222-20.110222L572.302222 230.4l20.110222-20.110222 80.469334-80.440889z m-241.351111-40.220445l-60.330667-60.359111-40.220444 40.248889 120.689778 120.661333-20.110223 20.110223-120.689777-120.661334-40.220445 40.220445 60.330667 60.330666-20.110222 20.110223-60.330667-60.330667-40.220444 40.220444 120.689777 120.689778-20.110222 20.110222-120.689778-120.689777-40.220444 40.248889 60.330667 60.330666-20.110223 20.110222-60.330666-60.330666-40.220445 40.220444 120.689778 120.689778-20.110222 20.110222-120.689778-120.689778-40.220444 40.220445 60.330666 60.359111-20.110222 20.110222L230.4 612.551111l-60.330667 60.359111 181.020445 181.020445 502.840889-502.840889-181.020445-181.020445L612.551111 230.4l60.330667 60.359111z\"  ></path></symbol><symbol id=\"icon-juxing\" viewBox=\"0 0 1024 1024\"><path d=\"M853.333333 810.666667H170.666667V213.333333h682.666666v597.333334zM213.333333 256v512h597.333334V256z\"  ></path></symbol><symbol id=\"icon-leimupinleifenleileibie\" viewBox=\"0 0 1024 1024\"><path d=\"M320 512 192 512c-70.4 0-128 57.6-128 128l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128l0-128C448 569.6 390.4 512 320 512zM384 768c0 35.2-28.8 64-64 64L192 832c-35.2 0-64-28.8-64-64l0-128c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L384 768zM768 64l-128 0C569.6 64 512 121.6 512 192l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128L896 192C896 121.6 838.4 64 768 64zM832 320c0 35.2-28.8 64-64 64l-128 0C604.8 384 576 355.2 576 320L576 192c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L832 320zM768 512l-128 0c-70.4 0-128 57.6-128 128l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128l0-128C896 569.6 838.4 512 768 512zM832 768c0 35.2-28.8 64-64 64l-128 0c-35.2 0-64-28.8-64-64l0-128c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L832 768zM320 64 192 64C121.6 64 64 121.6 64 192l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128L448 192C448 121.6 390.4 64 320 64zM384 320c0 35.2-28.8 64-64 64L192 384C156.8 384 128 355.2 128 320L128 192c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L384 320z\"  ></path></symbol><symbol id=\"icon-shenglvehao\" viewBox=\"0 0 1024 1024\"><path d=\"M176 511a56 56 0 1 0 112 0 56 56 0 1 0-112 0zM456 511a56 56 0 1 0 112 0 56 56 0 1 0-112 0zM736 511a56 56 0 1 0 112 0 56 56 0 1 0-112 0z\"  ></path></symbol></svg>',c=(c=document.getElementsByTagName(\"script\"))[c.length-1].getAttribute(\"data-injectcss\"),n=function(a,t){t.parentNode.insertBefore(a,t)};if(c&&!a.__iconfont__svg__cssinject__){a.__iconfont__svg__cssinject__=!0;try{document.write(\"<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")}catch(a){console&&console.log(a)}}function s(){i||(i=!0,l())}function d(){try{o.documentElement.doScroll(\"left\")}catch(a){return void setTimeout(d,50)}s()}t=function(){var a,t=document.createElement(\"div\");t.innerHTML=e,e=null,(t=t.getElementsByTagName(\"svg\")[0])&&(t.setAttribute(\"aria-hidden\",\"true\"),t.style.position=\"absolute\",t.style.width=0,t.style.height=0,t.style.overflow=\"hidden\",t=t,(a=document.body).firstChild?n(t,a.firstChild):a.appendChild(t))},document.addEventListener?~[\"complete\",\"loaded\",\"interactive\"].indexOf(document.readyState)?setTimeout(t,0):(h=function(){document.removeEventListener(\"DOMContentLoaded\",h,!1),t()},document.addEventListener(\"DOMContentLoaded\",h,!1)):document.attachEvent&&(l=t,o=a.document,i=!1,d(),o.onreadystatechange=function(){\"complete\"==o.readyState&&(o.onreadystatechange=null,s())})}(window);","import React from 'react'\r\nimport './CustomOverlay.scss'\r\n\r\nconst CustomOverlay = props => {\r\n  return (\r\n    <ul className=\"custom-overlay-box\">\r\n      <li>\r\n        当前帧数：<span>{props.imageIndex - 1}</span>\r\n      </li>\r\n      <li>\r\n        总帧数：<span>{props.stackSize}</span>\r\n      </li>\r\n      <li>\r\n        窗宽：<span>{Number(props.windowWidth).toFixed(2)} HU</span>\r\n      </li>\r\n      <li>\r\n        窗位：<span>{Number(props.windowCenter).toFixed(2)} HU</span>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default CustomOverlay\r\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader'\r\nimport cornerstone from 'cornerstone-core'\r\nimport dcmjs from \"dcmjs\";\r\n\r\nexport const readFileInfo  = (file) => {\r\n  const arrayBuffer = window.fs.readFileSync(file.path).buffer;\r\n  const dicomDict = dcmjs.data.DicomMessage.readFile(arrayBuffer)\r\n  return dicomDict\r\n}\r\n\r\nexport const addDicomFile = file => {\r\n  const dcmID = cornerstoneWADOImageLoader.wadouri.fileManager.add(file)\r\n  // console.log(\"dcmID: \", dcmID)\r\n  return cornerstone.loadImage(dcmID).then(function (image) {\r\n    // console.log(image);\r\n    return image\r\n  })\r\n}\r\n\r\nexport const showImageByDCMID= dcmID => {\r\n  // console.log(\"dcmID: \", dcmID)\r\n  return cornerstone.loadImage(dcmID).then(function (image) {\r\n    // console.log(image);\r\n    return image\r\n  })\r\n}\r\n\r\nexport const showDicomImage = file => {\r\n  const dcmID = cornerstoneWADOImageLoader.wadouri.fileManager.add(file)\r\n  console.log('dcmID: ', dcmID)\r\n  const element = document.querySelector('.viewport-element')\r\n  cornerstone.enable(element, { colormap: '' })\r\n\r\n  return cornerstone.loadImage(dcmID).then(function (image) {\r\n    console.log(image)\r\n    const viewport = cornerstone.getDefaultViewportForImage(element, image)\r\n    cornerstone.displayImage(element, image, viewport)\r\n    return image\r\n  })\r\n}\r\n\r\nexport function dicomDateTimeToLocale(dateTime, divide) {\r\n  const date = new Date(dateTime.substring(0, 4) + '-' + dateTime.substring(4, 6) + '-' + dateTime.substring(6, 8))\r\n  const time = dateTime.substring(9, 11) + ':' + dateTime.substring(11, 13) + ':' + dateTime.substring(13, 15)\r\n  const localeDate = date.toLocaleDateString()\r\n  if (!divide) {\r\n    return `${localeDate} ${time}`\r\n  } else if (divide === 'date') {\r\n    return `${localeDate}`\r\n  }\r\n}\r\n\r\nexport function dicomTimeToLocale(dateTime) {\r\n  const time = dateTime.substring(0, 2) + ':' + dateTime.substring(2, 4) + ':' + dateTime.substring(4, 6)\r\n    return `${time}`\r\n}\r\n\r\nexport const formatFile = async fileList => {\r\n  fileList = fileList.split(',')\r\n  const imagesIDConfig = []\r\n  for (let i = 0; i < fileList.length; i++) {\r\n    if (window.fs.existsSync(fileList[i])) {\r\n      const data = window.fs.readFileSync(fileList[i])\r\n      const fileName = fileList[i].split('\\\\').pop()\r\n      const file = new window.File([data], fileName, { type: 'application/dicom' })\r\n      const imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(file)\r\n      imagesIDConfig.push(imageId)\r\n    } else {\r\n      console.log(fileList[i], ' not exists!!!')\r\n      return\r\n    }\r\n  }\r\n  return imagesIDConfig\r\n}\r\n\r\nexport const keyFormat = txt => {\r\n  return txt.replace(/\\/|\\s/gi, '_')\r\n}","import React, { useState, useEffect, createRef } from 'react'\r\nimport CornerstoneViewport from 'react-cornerstone-viewport'\r\nimport './ViewerMain.scss'\r\nimport cornerstone from 'cornerstone-core'\r\nimport useWindowSize from '../../hook/useWindowSize'\r\nimport CustomOverlay from '../common/CustomOverlay/CustomOverlay'\r\nimport { showImageByDCMID } from '../../util/index'\r\n\r\nconst ViewerMain = props => {\r\n  const size = useWindowSize()\r\n  return (\r\n    <div className=\"viewer-main-box\">\r\n      <CornerstoneViewport\r\n        imageIdIndex={props.imageIdIndex}\r\n        viewportOverlayComponent={CustomOverlay}\r\n        onElementEnabled={elementEnabledEvt => props.handleElementEnabledEvt(elementEnabledEvt)}\r\n        imageIds={props.imagesConfig}\r\n        style={{\r\n          minWidth: '100%',\r\n          height: `${size.height - 70}px`,\r\n          flex: '1',\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const ViewerThumbnail = props => {\r\n  const { imageId, imageIdIndex } = props\r\n  const canvasRef = createRef()\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [image, setImage] = useState({})\r\n\r\n  useEffect(() => {\r\n    if (image.imageId) {\r\n      cornerstone.renderToCanvas(canvasRef.current, image)\r\n      setLoading(false)\r\n    }\r\n  }, [canvasRef, image, image.imageId])\r\n\r\n  useEffect(() => {\r\n    // console.log('imageId：', imageId, ', image: ', image)\r\n    if (!image.imageId || image.imageId !== imageId) {\r\n      setLoading(true)\r\n      showImageByDCMID(imageId)\r\n        .then(res => {\r\n          setImage(res)\r\n        })\r\n        .catch(err => {\r\n          console.log('err: ', err)\r\n        })\r\n    }\r\n  }, [image.imageId, imageId])\r\n\r\n  // console.log('imageIdIndex: ', props.imageIdIndex)\r\n  // console.log('props:', props)\r\n  return (\r\n    <div>\r\n        <div className=\"image-thumbnail-canvas\">\r\n            <canvas ref={canvasRef} style={{\r\n                minWidth: '100%',\r\n                minHeight: '100px',\r\n                flex: '1',\r\n            }} />\r\n            {isLoading && <div className=\"image-thumbnail-loading-indicator\"></div>}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewerMain\r\n","import { useEffect, useState, useCallback } from 'react'\r\n\r\nexport default function useWindowSize() {\r\n  const [size, setSize] = useState({\r\n    width: document.documentElement.clientWidth,\r\n    height: document.documentElement.clientHeight,\r\n  })\r\n\r\n  const onResize = useCallback(() => {\r\n    setSize({\r\n      width: document.documentElement.clientWidth,\r\n      height: document.documentElement.clientHeight,\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onResize)\r\n    return () => {\r\n      window.removeEventListener('resize', onResize)\r\n    }\r\n  }, [onResize])\r\n\r\n  return size\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport './LeftSidePanel.scss'\r\nimport { Tag } from 'antd'\r\nimport { ViewerThumbnail } from '../ViewerMain/ViewerMain'\r\n\r\nconst LeftSidePanel = props => {\r\n  // console.log('p: ', props)\r\n  const [thumbnailList, setThumbnailList] = useState([])\r\n  useEffect(() => {\r\n    // console.log('update: ', props.patientInfo.seriesInfo)\r\n    let tempList = [...props.patientInfo.seriesInfo]\r\n    // tempList[0].active = true\r\n    // tempList.sort((a,b) => new Date(b['acquisitionDate']) -  new Date(a['acquisitionDate']))\r\n    setThumbnailList(tempList)\r\n  }, [props.patientInfo.seriesInfo])\r\n\r\n  const methods = {\r\n    changeActive(item) {\r\n      thumbnailList?.map((res, index) => {\r\n        res.active = false\r\n      })\r\n      item.active = true\r\n      props.getSelectedSeries(item)\r\n      setThumbnailList([...thumbnailList])\r\n    },\r\n  }\r\n\r\n  // console.log('left all seriesInfo: ', props.patientInfo.seriesInfo)\r\n  return (\r\n    <div className=\"left-side-panel-box\">\r\n      <div className=\"list-box-wrap\">\r\n        <div className=\"list-box\">\r\n          {thumbnailList?.length === 0 ? (\r\n            <div className=\"empty\">暂无序列</div>\r\n          ) : (\r\n            thumbnailList?.map((item, index) => (\r\n              <div\r\n                key={item.key}\r\n                onClick={e => {\r\n                  methods.changeActive(item, index)\r\n                }}\r\n                className={item.active ? 'active list-item' : 'list-item'}\r\n              >\r\n                <div className=\"title\">序列：{item.seriesDescription}</div>\r\n                <div className=\"img-box\">\r\n                  <ViewerThumbnail imageId={item.cover} imageIdIndex={Number(item.seriesNo)} />\r\n                  <div className=\"sequence-num\">\r\n                    <Tag color=\"orange\">{item.frameNum} 帧</Tag>\r\n                  </div>\r\n                </div>\r\n                <div className=\"list-detail\">{item['acquisitionDate']}</div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftSidePanel\r\n","import { createFromIconfontCN } from '@ant-design/icons'\r\nimport iconfont from './iconFont'\r\n\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: { iconfont },\r\n})\r\n\r\nexport default IconFont\r\n","import React, { useState, useEffect} from 'react'\r\nimport './ModalContent.scss'\r\nimport {readFileInfo, dicomDateTimeToLocale, dicomTimeToLocale} from \"../../util\";\r\nimport { Descriptions } from 'antd'\r\n\r\n\r\nconst ModalContent = (props) => {\r\n\r\n    let selectedPath = null\r\n    console.log('props: ', props.globalData)\r\n\r\n    for (let i = 0; i < props.globalData.seriesInfo.length; i ++) {\r\n        if (props.globalData.seriesInfo[i].active) {\r\n            selectedPath = {path: props.globalData.seriesInfo[i].framePath.split(',')[0]}\r\n        }\r\n    }\r\n    const info = readFileInfo(selectedPath)\r\n    const dict = info['dict']\r\n    const meta = info['meta']\r\n    console.log('info: ', info)\r\n\r\n    const textFormat = (txt) => {\r\n        if (txt) {\r\n            return txt['Value'].toString()\r\n        }\r\n    }\r\n    \r\n  return (\r\n    <div className=\"modal-content-wrap\" >\r\n        <Descriptions title=\"病人\" column={1}>\r\n            <Descriptions.Item label=\"Patient's Name\">{textFormat(dict['00100010'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Patient ID\">{textFormat(dict['00100020'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Patient's Gender\">{textFormat(dict['00100040'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Patient's Birth Date\">{textFormat(dict['00100030'])}</Descriptions.Item>\r\n        </Descriptions>\r\n        <Descriptions title=\"CT机生产商信息\" column={1}>\r\n            <Descriptions.Item label=\"Manufacturer\">{textFormat(dict['00080070'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Manufacturer's Model Name\">{textFormat(dict['00081090'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Station Name\">{textFormat(dict['00081010'])}</Descriptions.Item>\r\n\r\n        </Descriptions>\r\n        <Descriptions title=\"CT检测信息\" column={1}>\r\n            <Descriptions.Item label=\"Study Instance UID\">{textFormat(dict['0020000D'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Study Date\">{dicomDateTimeToLocale(textFormat(dict['00080020']),'date')}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Study Time\">{dicomTimeToLocale(textFormat(dict['00080030']))}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Study ID\">{textFormat(dict['00200010'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Study Description\">{textFormat(dict['00081030'])}</Descriptions.Item>\r\n        </Descriptions>\r\n        <Descriptions title=\"序列\" column={1}>\r\n            <Descriptions.Item label=\"Series Instance UlD\">{textFormat(dict['0020000E'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Series Date\">{dicomDateTimeToLocale(textFormat(dict['00080021']),'date')}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Series Time\">{dicomTimeToLocale(textFormat(dict['00080031']))}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Series Number\">{textFormat(dict['00200011'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Modality\">{textFormat(dict['00080060'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Institution Name\">{textFormat(dict['00080080'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Series Description\">{textFormat(dict['0008103E'])}</Descriptions.Item>\r\n        </Descriptions>\r\n        <Descriptions title=\"DICOM对象\" column={1}>\r\n            <Descriptions.Item label=\"SOP Instance UID\">{textFormat(dict['00080018'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Image Type\">{textFormat(dict['00080008'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Transfer Syntax UID\">{textFormat(meta['00020010'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Instance Number\">{textFormat(dict['00200013'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Photometric Interpretation\">{textFormat(dict['00280004'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Samples per Pixel\">{textFormat(dict['00280002'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Pixel Representation\">{textFormat(dict['00280103'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Rows\">{textFormat(dict['00280010'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Columns\">{textFormat(dict['00280011'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Bits Allocated\">{textFormat(dict['00280100'])}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Bits Stored\">{textFormat(dict['00280101'])}</Descriptions.Item>\r\n        </Descriptions>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalContent\r\n","import React, { useState } from 'react'\r\nimport './Toolbar.scss'\r\nimport IconFont from '../common/IconFont/index'\r\nimport { Tooltip, Button, Modal } from 'antd'\r\nimport ModalContent from '../ModalContent/ModalContent'\r\n\r\nconst toolbarList = [\r\n  {\r\n    id: 1,\r\n    text: '自动播放',\r\n    icon: <IconFont style={{ fontSize: '24px' }} type=\"icon-asmkticon0229\" />,\r\n    type: 'playClip',\r\n    checked: false,\r\n    filter: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: '垂直翻转',\r\n    icon: <IconFont style={{ fontSize: '20px' }} type=\"icon-fanzhuan1\" />,\r\n    type: 'vflip',\r\n    checked: false,\r\n    filter: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    text: '水平翻转',\r\n    icon: <IconFont style={{ fontSize: '20px' }} type=\"icon-fanzhuan\" />,\r\n    type: 'hflip',\r\n    checked: false,\r\n    filter: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    text: '放大',\r\n    icon: <IconFont style={{ fontSize: '26px' }} type=\"icon-fangda\" />,\r\n    type: 'Magnify',\r\n    checked: false,\r\n  },\r\n  // {\r\n  //   id: 5,\r\n  //   text: '聚焦',\r\n  //   icon: <IconFont style={{ fontSize: '24px' }} type=\"icon-jujiao\" />,\r\n  //   type: 'focus',\r\n  //   checked: false,\r\n  // },\r\n  {\r\n    id: 6,\r\n    type: 'hr',\r\n  },\r\n  {\r\n    id: 7,\r\n    text: '圆形',\r\n    icon: <IconFont style={{ fontSize: '24px' }} type=\"icon-yuanxing\" />,\r\n    type: 'EllipticalRoi',\r\n    checked: false,\r\n  },\r\n  // {\r\n  //   id: 8,\r\n  //   text: '矩形',\r\n  //   icon: <IconFont style={{ fontSize: '24px' }} type=\"icon-juxing\" />,\r\n  //   type: 'RectangleRoi',\r\n  //   checked: false,\r\n  // },\r\n  {\r\n    id: 9,\r\n    text: '角度选择',\r\n    icon: <IconFont style={{ fontSize: '18px' }} type=\"icon-jiaoduceliang\" />,\r\n    type: 'Angle',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 10,\r\n    text: '尺子',\r\n    icon: <IconFont style={{ fontSize: '22px' }} type=\"icon-02-chizi\" />,\r\n    type: 'Length',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 17,\r\n    text: '矩形',\r\n    icon: <IconFont style={{ fontSize: '24px' }} type=\"icon-juxing\" />,\r\n    type: 'RectangleRoi',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 11,\r\n    text: '缩放',\r\n    icon: <IconFont style={{ fontSize: '18px' }} type=\"icon-zoom\" />,\r\n    type: 'Zoom',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 12,\r\n    text: '平移',\r\n    icon: <IconFont style={{ fontSize: '18px' }} type=\"icon-move\" />,\r\n    type: 'Pan',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 13,\r\n    type: 'hr',\r\n  },\r\n  {\r\n    id: 14,\r\n    text: '复原图像',\r\n    icon: <IconFont style={{ fontSize: '18px' }} type=\"icon-reset_defalut\" />,\r\n    type: 'Reset',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 15,\r\n    text: '清除标注',\r\n    icon: <IconFont style={{ fontSize: '18px' }} type=\"icon-qingchuhuancun\" />,\r\n    type: 'Eraser',\r\n    checked: false,\r\n  },\r\n  {\r\n    id: 16,\r\n    type: 'hr',\r\n  },\r\n  {\r\n    id: 18,\r\n    text: '结节标注',\r\n    icon: <IconFont style={{ fontSize: '20px' }} type=\"icon-juxing\" />,\r\n    type: 'AddNodule',\r\n    checked: false,\r\n  },\r\n]\r\n\r\nconst Toolbar = props => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [state, setstate] = useState(toolbarList)\r\n\r\n  const handleToolbarClick = (e, index, type) => {\r\n    if (type === 'playClip' || type === 'vflip' || type === 'hflip') {\r\n      state[index].checked = !state[index].checked\r\n      setstate([...state])\r\n    } else if (type === 'Reset') {\r\n      props.handleToolbarClick(type, state[index].checked)\r\n      state.map(item => {\r\n        if (item.type === 'vflip' || item.type === 'hflip') item.checked = false\r\n      })\r\n      setstate([...state])\r\n      return\r\n    } else {\r\n      state[index].checked = !state[index].checked\r\n      state.map(item => {\r\n        if (item.type !== type && item.type !== 'playClip' && item.type !== 'vflip' && item.type !== 'hflip')\r\n          item.checked = false\r\n      })\r\n      setstate([...state])\r\n    }\r\n\r\n    // 父组件传值\r\n    props.handleToolbarClick(type, state[index].checked)\r\n  }\r\n\r\n  return (\r\n    <ul className=\"tool-bar-wrap\">\r\n      <div className=\"tool-bar-box\">\r\n        <div className=\"back-btn\" onClick={() => props.setShowViewer(false)}>\r\n          <IconFont style={{ fontSize: '24px' }} type=\"icon-back\" />\r\n        </div>\r\n        <div className=\"tool-bar\">\r\n          {toolbarList.map((item, index) => {\r\n            return item.type === 'hr' ? (\r\n              <li key={item.id} className=\"hr\">\r\n                <div></div>\r\n              </li>\r\n            ) : (\r\n              <li\r\n                id={item.type === 'AddNodule' && item.checked ? 'mark' : null}\r\n                key={item.id}\r\n                className={item.checked ? (item.filter ? 'filter-active' : 'active') : ''}\r\n                onClick={e => handleToolbarClick(e, index, item.type)}\r\n                data-type={item.type}\r\n              >\r\n                <Tooltip title={item.text}>{item.icon}</Tooltip>\r\n              </li>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"show-modal\">\r\n        <Button onClick={props.handleExportExcel} style={{ marginRight: 15 }}>\r\n          导出结节信息\r\n        </Button>\r\n        <Button onClick={() => setVisible(true)}>查看头信息</Button>\r\n      </div>\r\n\r\n      <Modal\r\n        title=\"DICOM信息\"\r\n        centered\r\n        visible={visible}\r\n        onOk={() => setVisible(false)}\r\n        onCancel={() => setVisible(false)}\r\n        width={600}\r\n        footer={null}\r\n      >\r\n        <ModalContent globalData={props.globalData} />\r\n      </Modal>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Toolbar\r\n","import React from 'react'\r\nimport './MiddleSidePanel.scss'\r\n// import IconFont from '../common/IconFont/index'\r\nimport { Checkbox, Button, Input, Descriptions } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst MiddleSidePanel = props => {\r\n  const handleListClick = (index, num) => {\r\n    props.onCheckChange(index, num)\r\n  }\r\n\r\n  const size = 'small'\r\n\r\n  return (\r\n    <div className=\"middle-side-panel-box-wrap\">\r\n      <div className=\"middle-side-panel-box\">\r\n        <div className=\"basic-info-box\">\r\n          <div className=\"title\">基本信息</div>\r\n          <Descriptions column={1} size={size}>\r\n            <Descriptions.Item label=\"姓名\">{props.data.patientName}</Descriptions.Item>\r\n            <Descriptions.Item label=\"性别\">{props.data.patientGender === 'M' ? '男' : '女'}</Descriptions.Item>\r\n            {/* <Descriptions.Item label=\"年龄\">{props.data.patientName}</Descriptions.Item> */}\r\n            <Descriptions.Item label=\"病人ID\">{props.data.patientID}</Descriptions.Item>\r\n            <Descriptions.Item label=\"检查时间\">{props.data.acquisitionDate}</Descriptions.Item>\r\n          </Descriptions>\r\n        </div>\r\n        <div className=\"nodule-list-box\">\r\n          <div className=\"title\">结节列表（{props.noduleList?.length}）</div>\r\n          <div className=\"table-box\">\r\n            <div className=\"table-title\">\r\n              <Checkbox disabled checked={true}>\r\n                <div className=\"num\">中心帧</div>\r\n              </Checkbox>\r\n              <div className=\"size\">大小(单位mm)</div>\r\n              <div className=\"type\">类型</div>\r\n              <div className=\"suggest\">建议</div>\r\n            </div>\r\n            <div id=\"tableIItemBox\" className=\"table-content\">\r\n              {props.noduleList?.map((item, index) => (\r\n                <div\r\n                  key={item.noduleNum}\r\n                  className={`table-item ${item.active ? 'item-active' : ''}`}\r\n                  onClick={e => handleListClick(index, item.num)}\r\n                >\r\n                  <Checkbox onChange={e => props.onCheckChange(index, item.num)} checked={item.checked}>\r\n                    <div className=\"num\">{item.num}</div>\r\n                  </Checkbox>\r\n                  <div className=\"size\">{item.diameter}</div>\r\n                  <div className=\"type\">{item.type}</div>\r\n                  <div className=\"suggest\">{item.suggest}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"image-info-box\">\r\n          <div className=\"info-box\">\r\n            <div className=\"suggest-box\">\r\n              <div className=\"title\">结节备注</div>\r\n              <div className=\"suggest-content\">\r\n                <div className=\"suggest-content-wrap\">\r\n                  <TextArea\r\n                    placeholder=\"请输入结节备注\"\r\n                    bordered={false}\r\n                    rows={6}\r\n                    maxLength={150}\r\n                    style={{\r\n                      width: '100%',\r\n                      resize: 'none',\r\n                    }}\r\n                    value={props.noduleInfo?.suggest}\r\n                    onChange={props.handleTextareaOnChange}\r\n                  />\r\n                </div>\r\n                <div className=\"save\">\r\n                  <Button type=\"primary\" size=\"small\">\r\n                    保存\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiddleSidePanel\r\n","let defaultColor = 'red',\r\n  activeColor = 'red',\r\n  fillColor = 'transparent'\r\n\r\nfunction setFillColor(color) {\r\n  fillColor = color\r\n}\r\n\r\nfunction getFillColor() {\r\n  return fillColor\r\n}\r\n\r\nfunction setToolColor(color) {\r\n  defaultColor = color\r\n}\r\n\r\nfunction getToolColor() {\r\n  return defaultColor\r\n}\r\n\r\nfunction setActiveColor(color) {\r\n  activeColor = color\r\n}\r\n\r\nfunction getActiveColor() {\r\n  return activeColor\r\n}\r\n\r\nfunction getColorIfActive(data) {\r\n  if (data.color) {\r\n    return data.color\r\n  }\r\n\r\n  return data.active ? activeColor : defaultColor\r\n}\r\n\r\nconst toolColors = {\r\n  setFillColor,\r\n  getFillColor,\r\n  setToolColor,\r\n  getToolColor,\r\n  setActiveColor,\r\n  getActiveColor,\r\n  getColorIfActive,\r\n}\r\n\r\nexport default toolColors\r\n","let defaultWidth = 1,\r\n  activeWidth = 2\r\n\r\nfunction setToolWidth(width) {\r\n  defaultWidth = width\r\n}\r\n\r\nfunction getToolWidth() {\r\n  return defaultWidth\r\n}\r\n\r\nfunction setActiveWidth(width) {\r\n  activeWidth = width\r\n}\r\n\r\nfunction getActiveWidth() {\r\n  return activeWidth\r\n}\r\n\r\nconst toolStyle = {\r\n  setToolWidth,\r\n  getToolWidth,\r\n  setActiveWidth,\r\n  getActiveWidth,\r\n}\r\n\r\nexport default toolStyle\r\n","import cornerstone from 'cornerstone-core'\r\nimport toolStyle from './toolStyle.js'\r\n\r\nfunction getToolState(element, toolName) {\r\n  const toolStateManager = getElementToolStateManager(element)\r\n  return toolStateManager.get(element, toolName)\r\n}\r\n\r\nfunction getElementToolStateManager(element) {\r\n  const enabledElement = cornerstone.getEnabledElement(element)\r\n  return enabledElement.toolStateManager\r\n}\r\n\r\nfunction getNewContext(canvas) {\r\n  const context = canvas.getContext('2d')\r\n  context.setTransform(1, 0, 0, 1, 0, 0)\r\n  return context\r\n}\r\n\r\nfunction draw(context, fn) {\r\n  context.save()\r\n  fn(context)\r\n  context.restore()\r\n}\r\n\r\nfunction rotatePoint(point, center, angle) {\r\n  const angleRadians = angle * (Math.PI / 180) // Convert to radians\r\n  const rotatedX =\r\n    Math.cos(angleRadians) * (point.x - center.x) - Math.sin(angleRadians) * (point.y - center.y) + center.x\r\n  const rotatedY =\r\n    Math.sin(angleRadians) * (point.x - center.x) + Math.cos(angleRadians) * (point.y - center.y) + center.y\r\n\r\n  return {\r\n    x: rotatedX,\r\n    y: rotatedY,\r\n  }\r\n}\r\n\r\nfunction path(context, options = {}, fn) {\r\n  const { color, lineWidth, fillStyle, lineDash, shouldDrawLines = true } = options\r\n\r\n  context.beginPath()\r\n  context.strokeStyle = color || context.strokeStyle\r\n\r\n  context.lineWidth = lineWidth || (lineWidth === undefined && toolStyle.getToolWidth()) || context.lineWidth\r\n  if (lineDash) {\r\n    context.setLineDash(lineDash)\r\n  }\r\n\r\n  fn(context)\r\n\r\n  if (fillStyle) {\r\n    context.fillStyle = fillStyle\r\n    context.fill()\r\n  }\r\n\r\n  if (shouldDrawLines) {\r\n    context.stroke()\r\n  }\r\n\r\n  if (lineDash) {\r\n    context.setLineDash([])\r\n  }\r\n}\r\n\r\nfunction drawRect(context, element, corner1, corner2, options, coordSystem = 'pixel', initialRotation = 0.0) {\r\n  if (coordSystem === 'pixel') {\r\n    corner1 = cornerstone.pixelToCanvas(element, corner1)\r\n    corner2 = cornerstone.pixelToCanvas(element, corner2)\r\n  }\r\n\r\n  const viewport = cornerstone.getViewport(element)\r\n\r\n  // Calculate the center of the image\r\n  const { clientWidth: width, clientHeight: height } = element\r\n  const { scale, translation } = viewport\r\n  const rotation = viewport.rotation - initialRotation\r\n\r\n  const centerPoint = {\r\n    x: width / 2 + translation.x * scale,\r\n    y: height / 2 + translation.y * scale,\r\n  }\r\n\r\n  if (Math.abs(rotation) > 0.05) {\r\n    corner1 = rotatePoint(corner1, centerPoint, -rotation)\r\n    corner2 = rotatePoint(corner2, centerPoint, -rotation)\r\n  }\r\n\r\n  const w = Math.abs(corner1.x - corner2.x)\r\n  const h = Math.abs(corner1.y - corner2.y)\r\n\r\n  corner1 = {\r\n    x: Math.min(corner1.x, corner2.x),\r\n    y: Math.min(corner1.y, corner2.y),\r\n  }\r\n\r\n  corner2 = {\r\n    x: corner1.x + w,\r\n    y: corner1.y + h,\r\n  }\r\n\r\n  let corner3 = {\r\n    x: corner1.x + w,\r\n    y: corner1.y,\r\n  }\r\n\r\n  let corner4 = {\r\n    x: corner1.x,\r\n    y: corner1.y + h,\r\n  }\r\n\r\n  if (Math.abs(rotation) > 0.05) {\r\n    corner1 = rotatePoint(corner1, centerPoint, rotation)\r\n    corner2 = rotatePoint(corner2, centerPoint, rotation)\r\n    corner3 = rotatePoint(corner3, centerPoint, rotation)\r\n    corner4 = rotatePoint(corner4, centerPoint, rotation)\r\n  }\r\n\r\n  path(context, options, context => {\r\n    context.moveTo(corner1.x, corner1.y)\r\n    context.lineTo(corner3.x, corner3.y)\r\n    context.lineTo(corner2.x, corner2.y)\r\n    context.lineTo(corner4.x, corner4.y)\r\n    context.lineTo(corner1.x, corner1.y)\r\n  })\r\n}\r\n\r\nfunction getPixelSpacing(image) {\r\n  const imagePlane = cornerstone.metaData.get('imagePlaneModule', image.imageId)\r\n\r\n  if (imagePlane) {\r\n    return {\r\n      rowPixelSpacing: imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing,\r\n      colPixelSpacing: imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing,\r\n    }\r\n  }\r\n\r\n  return {\r\n    rowPixelSpacing: image.rowPixelSpacing,\r\n    colPixelSpacing: image.columnPixelSpacing,\r\n  }\r\n}\r\n\r\nfunction calculateSUV(image, storedPixelValue, skipRescale = false) {\r\n  const patientStudyModule = cornerstone.metaData.get('patientStudyModule', image.imageId)\r\n  const seriesModule = cornerstone.metaData.get('generalSeriesModule', image.imageId)\r\n\r\n  if (!patientStudyModule || !seriesModule) {\r\n    return\r\n  }\r\n\r\n  const modality = seriesModule.modality\r\n\r\n  // Image must be PET\r\n  if (modality !== 'PT') {\r\n    return\r\n  }\r\n\r\n  const modalityPixelValue = skipRescale ? storedPixelValue : storedPixelValue * image.slope + image.intercept\r\n\r\n  const patientWeight = patientStudyModule.patientWeight // In kg\r\n\r\n  if (!patientWeight) {\r\n    return\r\n  }\r\n\r\n  const petSequenceModule = cornerstone.metaData.get('petIsotopeModule', image.imageId)\r\n\r\n  if (!petSequenceModule) {\r\n    return\r\n  }\r\n\r\n  const radiopharmaceuticalInfo = petSequenceModule.radiopharmaceuticalInfo\r\n  const startTime = radiopharmaceuticalInfo.radiopharmaceuticalStartTime\r\n  const totalDose = radiopharmaceuticalInfo.radionuclideTotalDose\r\n  const halfLife = radiopharmaceuticalInfo.radionuclideHalfLife\r\n  const seriesAcquisitionTime = seriesModule.seriesTime\r\n\r\n  if (!startTime || !totalDose || !halfLife || !seriesAcquisitionTime) {\r\n    return\r\n  }\r\n\r\n  const acquisitionTimeInSeconds =\r\n    fracToDec(seriesAcquisitionTime.fractionalSeconds || 0) +\r\n    seriesAcquisitionTime.seconds +\r\n    seriesAcquisitionTime.minutes * 60 +\r\n    seriesAcquisitionTime.hours * 60 * 60\r\n  const injectionStartTimeInSeconds =\r\n    fracToDec(startTime.fractionalSeconds || 0) + startTime.seconds + startTime.minutes * 60 + startTime.hours * 60 * 60\r\n  const durationInSeconds = acquisitionTimeInSeconds - injectionStartTimeInSeconds\r\n  const correctedDose = totalDose * Math.exp((-durationInSeconds * Math.log(2)) / halfLife)\r\n  const suv = ((modalityPixelValue * patientWeight) / correctedDose) * 1000\r\n\r\n  return suv\r\n}\r\n\r\n/**\r\n * Returns a decimal value given a fractional value.\r\n * @private\r\n * @method\r\n * @name fracToDec\r\n *\r\n * @param  {number} fractionalValue The value to convert.\r\n * @returns {number}                 The value converted to decimal.\r\n */\r\nfunction fracToDec(fractionalValue) {\r\n  return parseFloat(`.${fractionalValue}`)\r\n}\r\n\r\nexport {\r\n  getToolState,\r\n  getElementToolStateManager,\r\n  getNewContext,\r\n  rotatePoint,\r\n  draw,\r\n  path,\r\n  drawRect,\r\n  getPixelSpacing,\r\n  calculateSUV,\r\n}\r\n","import csTools from 'cornerstone-tools'\r\nimport toolColors from './toolColors.js'\r\nimport { getToolState, getNewContext, draw, drawRect, getPixelSpacing, calculateSUV } from './util'\r\n\r\nconst BaseAnnotationTool = csTools.importInternal('base/BaseAnnotationTool')\r\n\r\nexport default class MarkNoduleTool extends BaseAnnotationTool {\r\n  constructor(props = {}) {\r\n    const defaultProps = {\r\n      name: 'MarkNodule',\r\n      supportedInteractionTypes: ['Mouse'],\r\n      configuration: {\r\n        drawHandles: false,\r\n        drawHandlesOnHover: false,\r\n        hideHandlesIfMoving: true,\r\n        renderDashed: false,\r\n      },\r\n    }\r\n\r\n    super(props, defaultProps)\r\n  }\r\n\r\n  handleSelectedCallback(e) {\r\n    // 覆盖父类方法，禁止工具选中\r\n  }\r\n\r\n  createNewMeasurement(eventData) {\r\n    return {\r\n      visible: true,\r\n      active: false,\r\n      color: undefined,\r\n      invalidated: true,\r\n      handles: {\r\n        start: {\r\n          x: eventData.currentPoints.image.x,\r\n          y: eventData.currentPoints.image.y,\r\n          highlight: false,\r\n          active: false,\r\n        },\r\n        end: {\r\n          x: eventData.currentPoints.image.x,\r\n          y: eventData.currentPoints.image.y,\r\n          highlight: false,\r\n          active: false,\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  pointNearTool(element, data, coords, interactionType) {\r\n    return false\r\n  }\r\n\r\n  // 获取工具框选的信息\r\n  updateCachedStats(image, element, data) {\r\n    const seriesModule = window.cornerstone.metaData.get('generalSeriesModule', image.imageId) || {}\r\n    const modality = seriesModule.modality\r\n    const pixelSpacing = getPixelSpacing(image)\r\n\r\n    const stats = _calculateStats(image, element, data.handles, modality, pixelSpacing)\r\n\r\n    data.cachedStats = stats\r\n    data.invalidated = false\r\n  }\r\n\r\n  renderToolData(evt) {\r\n    const toolData = getToolState(evt.currentTarget, this.name)\r\n\r\n    if (!toolData) {\r\n      return\r\n    }\r\n\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const context = getNewContext(eventData.canvasContext.canvas)\r\n\r\n    draw(context, context => {\r\n      // If we have tool data for this element - iterate over each set and draw it\r\n      for (let i = 0; i < toolData.data.length; i++) {\r\n        const data = toolData.data[i]\r\n\r\n        if (data.visible === false) {\r\n          continue\r\n        }\r\n\r\n        // Configure\r\n        const color = toolColors.getColorIfActive(data)\r\n\r\n        const rectOptions = { color }\r\n\r\n        // Draw\r\n        drawRect(\r\n          context,\r\n          element,\r\n          data.handles.start,\r\n          data.handles.end,\r\n          rectOptions,\r\n          'pixel',\r\n          data.handles.initialRotation\r\n        )\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction _getRectangleImageCoordinates(startHandle, endHandle) {\r\n  return {\r\n    left: Math.min(startHandle.x, endHandle.x),\r\n    top: Math.min(startHandle.y, endHandle.y),\r\n    width: Math.abs(startHandle.x - endHandle.x),\r\n    height: Math.abs(startHandle.y - endHandle.y),\r\n  }\r\n}\r\n\r\nfunction _calculateRectangleStats(sp, rectangle) {\r\n  let sum = 0\r\n  let sumSquared = 0\r\n  let count = 0\r\n  let index = 0\r\n  let min = sp ? sp[0] : null\r\n  let max = sp ? sp[0] : null\r\n\r\n  for (let y = rectangle.top; y < rectangle.top + rectangle.height; y++) {\r\n    for (let x = rectangle.left; x < rectangle.left + rectangle.width; x++) {\r\n      sum += sp[index]\r\n      sumSquared += sp[index] * sp[index]\r\n      min = Math.min(min, sp[index])\r\n      max = Math.max(max, sp[index])\r\n      count++ // TODO: Wouldn't this just be sp.length?\r\n      index++\r\n    }\r\n  }\r\n\r\n  if (count === 0) {\r\n    return {\r\n      count,\r\n      mean: 0.0,\r\n      variance: 0.0,\r\n      stdDev: 0.0,\r\n      min: 0.0,\r\n      max: 0.0,\r\n    }\r\n  }\r\n\r\n  const mean = sum / count\r\n  const variance = sumSquared / count - mean * mean\r\n\r\n  return {\r\n    count,\r\n    mean,\r\n    variance,\r\n    stdDev: Math.sqrt(variance),\r\n    min,\r\n    max,\r\n  }\r\n}\r\n\r\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\r\n  // Retrieve the bounds of the rectangle in image coordinates\r\n  const roiCoordinates = _getRectangleImageCoordinates(handles.start, handles.end)\r\n\r\n  // Retrieve the array of pixels that the rectangle bounds cover\r\n  const pixels = window.cornerstone.getPixels(\r\n    element,\r\n    roiCoordinates.left,\r\n    roiCoordinates.top,\r\n    roiCoordinates.width,\r\n    roiCoordinates.height\r\n  )\r\n\r\n  // Calculate the mean & standard deviation from the pixels and the rectangle details\r\n  const roiMeanStdDev = _calculateRectangleStats(pixels, roiCoordinates)\r\n\r\n  let meanStdDevSUV\r\n\r\n  if (modality === 'PT') {\r\n    meanStdDevSUV = {\r\n      mean: calculateSUV(image, roiMeanStdDev.mean, true) || 0,\r\n      stdDev: calculateSUV(image, roiMeanStdDev.stdDev, true) || 0,\r\n    }\r\n  }\r\n\r\n  // Calculate the image area from the rectangle dimensions and pixel spacing\r\n  const area =\r\n    roiCoordinates.width *\r\n    (pixelSpacing.colPixelSpacing || 1) *\r\n    (roiCoordinates.height * (pixelSpacing.rowPixelSpacing || 1))\r\n\r\n  const perimeter =\r\n    roiCoordinates.width * 2 * (pixelSpacing.colPixelSpacing || 1) +\r\n    roiCoordinates.height * 2 * (pixelSpacing.rowPixelSpacing || 1)\r\n\r\n  return {\r\n    area: area || 0,\r\n    perimeter,\r\n    count: roiMeanStdDev.count || 0,\r\n    mean: roiMeanStdDev.mean || 0,\r\n    variance: roiMeanStdDev.variance || 0,\r\n    stdDev: roiMeanStdDev.stdDev || 0,\r\n    min: roiMeanStdDev.min || 0,\r\n    max: roiMeanStdDev.max || 0,\r\n    meanStdDevSUV,\r\n  }\r\n}\r\n","let defaultColor = 'red',\r\n  activeColor = 'red',\r\n  fillColor = 'transparent'\r\n\r\nfunction setFillColor(color) {\r\n  fillColor = color\r\n}\r\n\r\nfunction getFillColor() {\r\n  return fillColor\r\n}\r\n\r\nfunction setToolColor(color) {\r\n  defaultColor = color\r\n}\r\n\r\nfunction getToolColor() {\r\n  return defaultColor\r\n}\r\n\r\nfunction setActiveColor(color) {\r\n  activeColor = color\r\n}\r\n\r\nfunction getActiveColor() {\r\n  return activeColor\r\n}\r\n\r\nfunction getColorIfActive(data) {\r\n  if (data.color) {\r\n    return data.color\r\n  }\r\n\r\n  return data.active ? activeColor : defaultColor\r\n}\r\n\r\nconst toolColors = {\r\n  setFillColor,\r\n  getFillColor,\r\n  setToolColor,\r\n  getToolColor,\r\n  setActiveColor,\r\n  getActiveColor,\r\n  getColorIfActive,\r\n}\r\n\r\nexport default toolColors\r\n","let defaultWidth = 1,\r\n  activeWidth = 2\r\n\r\nfunction setToolWidth(width) {\r\n  defaultWidth = width\r\n}\r\n\r\nfunction getToolWidth() {\r\n  return defaultWidth\r\n}\r\n\r\nfunction setActiveWidth(width) {\r\n  activeWidth = width\r\n}\r\n\r\nfunction getActiveWidth() {\r\n  return activeWidth\r\n}\r\n\r\nconst toolStyle = {\r\n  setToolWidth,\r\n  getToolWidth,\r\n  setActiveWidth,\r\n  getActiveWidth,\r\n}\r\n\r\nexport default toolStyle\r\n","import cornerstone from 'cornerstone-core'\r\nimport toolStyle from './toolStyle.js'\r\n\r\nfunction getToolState(element, toolName) {\r\n  const toolStateManager = getElementToolStateManager(element)\r\n  return toolStateManager.get(element, toolName)\r\n}\r\n\r\nfunction getElementToolStateManager(element) {\r\n  const enabledElement = cornerstone.getEnabledElement(element)\r\n  return enabledElement.toolStateManager\r\n}\r\n\r\nfunction getNewContext(canvas) {\r\n  const context = canvas.getContext('2d')\r\n  context.setTransform(1, 0, 0, 1, 0, 0)\r\n  return context\r\n}\r\n\r\nfunction draw(context, fn) {\r\n  context.save()\r\n  fn(context)\r\n  context.restore()\r\n}\r\n\r\nfunction rotatePoint(point, center, angle) {\r\n  const angleRadians = angle * (Math.PI / 180) // Convert to radians\r\n  const rotatedX =\r\n    Math.cos(angleRadians) * (point.x - center.x) - Math.sin(angleRadians) * (point.y - center.y) + center.x\r\n  const rotatedY =\r\n    Math.sin(angleRadians) * (point.x - center.x) + Math.cos(angleRadians) * (point.y - center.y) + center.y\r\n\r\n  return {\r\n    x: rotatedX,\r\n    y: rotatedY,\r\n  }\r\n}\r\n\r\nfunction path(context, options = {}, fn) {\r\n  const { color, lineWidth, fillStyle, lineDash, shouldDrawLines = true } = options\r\n\r\n  context.beginPath()\r\n  context.strokeStyle = color || context.strokeStyle\r\n\r\n  context.lineWidth = lineWidth || (lineWidth === undefined && toolStyle.getToolWidth()) || context.lineWidth\r\n  if (lineDash) {\r\n    context.setLineDash(lineDash)\r\n  }\r\n\r\n  fn(context)\r\n\r\n  if (fillStyle) {\r\n    context.fillStyle = fillStyle\r\n    context.fill()\r\n  }\r\n\r\n  if (shouldDrawLines) {\r\n    context.stroke()\r\n  }\r\n\r\n  if (lineDash) {\r\n    context.setLineDash([])\r\n  }\r\n}\r\n\r\nfunction drawRect(context, element, corner1, corner2, options, coordSystem = 'pixel', initialRotation = 0.0) {\r\n  if (coordSystem === 'pixel') {\r\n    corner1 = cornerstone.pixelToCanvas(element, corner1)\r\n    corner2 = cornerstone.pixelToCanvas(element, corner2)\r\n  }\r\n\r\n  const viewport = cornerstone.getViewport(element)\r\n\r\n  // Calculate the center of the image\r\n  const { clientWidth: width, clientHeight: height } = element\r\n  const { scale, translation } = viewport\r\n  const rotation = viewport.rotation - initialRotation\r\n\r\n  const centerPoint = {\r\n    x: width / 2 + translation.x * scale,\r\n    y: height / 2 + translation.y * scale,\r\n  }\r\n\r\n  if (Math.abs(rotation) > 0.05) {\r\n    corner1 = rotatePoint(corner1, centerPoint, -rotation)\r\n    corner2 = rotatePoint(corner2, centerPoint, -rotation)\r\n  }\r\n\r\n  const w = Math.abs(corner1.x - corner2.x)\r\n  const h = Math.abs(corner1.y - corner2.y)\r\n\r\n  corner1 = {\r\n    x: Math.min(corner1.x, corner2.x),\r\n    y: Math.min(corner1.y, corner2.y),\r\n  }\r\n\r\n  corner2 = {\r\n    x: corner1.x + w,\r\n    y: corner1.y + h,\r\n  }\r\n\r\n  let corner3 = {\r\n    x: corner1.x + w,\r\n    y: corner1.y,\r\n  }\r\n\r\n  let corner4 = {\r\n    x: corner1.x,\r\n    y: corner1.y + h,\r\n  }\r\n\r\n  if (Math.abs(rotation) > 0.05) {\r\n    corner1 = rotatePoint(corner1, centerPoint, rotation)\r\n    corner2 = rotatePoint(corner2, centerPoint, rotation)\r\n    corner3 = rotatePoint(corner3, centerPoint, rotation)\r\n    corner4 = rotatePoint(corner4, centerPoint, rotation)\r\n  }\r\n\r\n  path(context, options, context => {\r\n    context.moveTo(corner1.x, corner1.y)\r\n    context.lineTo(corner3.x, corner3.y)\r\n    context.lineTo(corner2.x, corner2.y)\r\n    context.lineTo(corner4.x, corner4.y)\r\n    context.lineTo(corner1.x, corner1.y)\r\n  })\r\n}\r\n\r\nfunction getPixelSpacing(image) {\r\n  const imagePlane = cornerstone.metaData.get('imagePlaneModule', image.imageId)\r\n\r\n  if (imagePlane) {\r\n    return {\r\n      rowPixelSpacing: imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing,\r\n      colPixelSpacing: imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing,\r\n    }\r\n  }\r\n\r\n  return {\r\n    rowPixelSpacing: image.rowPixelSpacing,\r\n    colPixelSpacing: image.columnPixelSpacing,\r\n  }\r\n}\r\n\r\nfunction calculateSUV(image, storedPixelValue, skipRescale = false) {\r\n  const patientStudyModule = cornerstone.metaData.get('patientStudyModule', image.imageId)\r\n  const seriesModule = cornerstone.metaData.get('generalSeriesModule', image.imageId)\r\n\r\n  if (!patientStudyModule || !seriesModule) {\r\n    return\r\n  }\r\n\r\n  const modality = seriesModule.modality\r\n\r\n  // Image must be PET\r\n  if (modality !== 'PT') {\r\n    return\r\n  }\r\n\r\n  const modalityPixelValue = skipRescale ? storedPixelValue : storedPixelValue * image.slope + image.intercept\r\n\r\n  const patientWeight = patientStudyModule.patientWeight // In kg\r\n\r\n  if (!patientWeight) {\r\n    return\r\n  }\r\n\r\n  const petSequenceModule = cornerstone.metaData.get('petIsotopeModule', image.imageId)\r\n\r\n  if (!petSequenceModule) {\r\n    return\r\n  }\r\n\r\n  const radiopharmaceuticalInfo = petSequenceModule.radiopharmaceuticalInfo\r\n  const startTime = radiopharmaceuticalInfo.radiopharmaceuticalStartTime\r\n  const totalDose = radiopharmaceuticalInfo.radionuclideTotalDose\r\n  const halfLife = radiopharmaceuticalInfo.radionuclideHalfLife\r\n  const seriesAcquisitionTime = seriesModule.seriesTime\r\n\r\n  if (!startTime || !totalDose || !halfLife || !seriesAcquisitionTime) {\r\n    return\r\n  }\r\n\r\n  const acquisitionTimeInSeconds =\r\n    fracToDec(seriesAcquisitionTime.fractionalSeconds || 0) +\r\n    seriesAcquisitionTime.seconds +\r\n    seriesAcquisitionTime.minutes * 60 +\r\n    seriesAcquisitionTime.hours * 60 * 60\r\n  const injectionStartTimeInSeconds =\r\n    fracToDec(startTime.fractionalSeconds || 0) + startTime.seconds + startTime.minutes * 60 + startTime.hours * 60 * 60\r\n  const durationInSeconds = acquisitionTimeInSeconds - injectionStartTimeInSeconds\r\n  const correctedDose = totalDose * Math.exp((-durationInSeconds * Math.log(2)) / halfLife)\r\n  const suv = ((modalityPixelValue * patientWeight) / correctedDose) * 1000\r\n\r\n  return suv\r\n}\r\n\r\n/**\r\n * Returns a decimal value given a fractional value.\r\n * @private\r\n * @method\r\n * @name fracToDec\r\n *\r\n * @param  {number} fractionalValue The value to convert.\r\n * @returns {number}                 The value converted to decimal.\r\n */\r\nfunction fracToDec(fractionalValue) {\r\n  return parseFloat(`.${fractionalValue}`)\r\n}\r\n\r\nexport {\r\n  getToolState,\r\n  getElementToolStateManager,\r\n  getNewContext,\r\n  rotatePoint,\r\n  draw,\r\n  path,\r\n  drawRect,\r\n  getPixelSpacing,\r\n  calculateSUV,\r\n}\r\n","import csTools from 'cornerstone-tools'\r\nimport toolColors from './toolColors.js'\r\nimport { getToolState, getNewContext, draw, drawRect, getPixelSpacing, calculateSUV } from './util'\r\n\r\nconst BaseAnnotationTool = csTools.importInternal('base/BaseAnnotationTool')\r\n\r\nexport default class AddNoduleTool extends BaseAnnotationTool {\r\n  constructor(props = {}) {\r\n    const defaultProps = {\r\n      name: 'AddNodule',\r\n      supportedInteractionTypes: ['Mouse'],\r\n      configuration: {\r\n        drawHandles: false,\r\n        drawHandlesOnHover: false,\r\n        hideHandlesIfMoving: true,\r\n        renderDashed: false,\r\n      },\r\n    }\r\n\r\n    super(props, defaultProps)\r\n  }\r\n\r\n  handleSelectedCallback(e) {\r\n    // 覆盖父类方法，禁止工具选中\r\n  }\r\n\r\n  createNewMeasurement(eventData) {\r\n    return {\r\n      visible: true,\r\n      active: false,\r\n      color: undefined,\r\n      invalidated: true,\r\n      handles: {\r\n        start: {\r\n          x: eventData.currentPoints.image.x,\r\n          y: eventData.currentPoints.image.y,\r\n          highlight: false,\r\n          active: false,\r\n        },\r\n        end: {\r\n          x: eventData.currentPoints.image.x,\r\n          y: eventData.currentPoints.image.y,\r\n          highlight: false,\r\n          active: false,\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  pointNearTool(element, data, coords, interactionType) {\r\n    return false\r\n  }\r\n\r\n  // 获取工具框选的信息\r\n  updateCachedStats(image, element, data) {\r\n    const seriesModule = window.cornerstone.metaData.get('generalSeriesModule', image.imageId) || {}\r\n    const modality = seriesModule.modality\r\n    const pixelSpacing = getPixelSpacing(image)\r\n\r\n    const stats = _calculateStats(image, element, data.handles, modality, pixelSpacing)\r\n\r\n    data.cachedStats = stats\r\n    data.invalidated = false\r\n  }\r\n\r\n  renderToolData(evt) {\r\n    const toolData = getToolState(evt.currentTarget, this.name)\r\n\r\n    if (!toolData) {\r\n      return\r\n    }\r\n\r\n    const eventData = evt.detail\r\n    const { element } = eventData\r\n    const context = getNewContext(eventData.canvasContext.canvas)\r\n\r\n    draw(context, context => {\r\n      // If we have tool data for this element - iterate over each set and draw it\r\n      for (let i = 0; i < toolData.data.length; i++) {\r\n        const data = toolData.data[i]\r\n\r\n        if (data.visible === false) {\r\n          continue\r\n        }\r\n\r\n        // Configure\r\n        const color = toolColors.getColorIfActive(data)\r\n\r\n        const rectOptions = { color }\r\n\r\n        // Draw\r\n        drawRect(\r\n          context,\r\n          element,\r\n          data.handles.start,\r\n          data.handles.end,\r\n          rectOptions,\r\n          'pixel',\r\n          data.handles.initialRotation\r\n        )\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction _getRectangleImageCoordinates(startHandle, endHandle) {\r\n  return {\r\n    left: Math.min(startHandle.x, endHandle.x),\r\n    top: Math.min(startHandle.y, endHandle.y),\r\n    width: Math.abs(startHandle.x - endHandle.x),\r\n    height: Math.abs(startHandle.y - endHandle.y),\r\n  }\r\n}\r\n\r\nfunction _calculateRectangleStats(sp, rectangle) {\r\n  let sum = 0\r\n  let sumSquared = 0\r\n  let count = 0\r\n  let index = 0\r\n  let min = sp ? sp[0] : null\r\n  let max = sp ? sp[0] : null\r\n\r\n  for (let y = rectangle.top; y < rectangle.top + rectangle.height; y++) {\r\n    for (let x = rectangle.left; x < rectangle.left + rectangle.width; x++) {\r\n      sum += sp[index]\r\n      sumSquared += sp[index] * sp[index]\r\n      min = Math.min(min, sp[index])\r\n      max = Math.max(max, sp[index])\r\n      count++ // TODO: Wouldn't this just be sp.length?\r\n      index++\r\n    }\r\n  }\r\n\r\n  if (count === 0) {\r\n    return {\r\n      count,\r\n      mean: 0.0,\r\n      variance: 0.0,\r\n      stdDev: 0.0,\r\n      min: 0.0,\r\n      max: 0.0,\r\n    }\r\n  }\r\n\r\n  const mean = sum / count\r\n  const variance = sumSquared / count - mean * mean\r\n\r\n  return {\r\n    count,\r\n    mean,\r\n    variance,\r\n    stdDev: Math.sqrt(variance),\r\n    min,\r\n    max,\r\n  }\r\n}\r\n\r\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\r\n  // Retrieve the bounds of the rectangle in image coordinates\r\n  const roiCoordinates = _getRectangleImageCoordinates(handles.start, handles.end)\r\n\r\n  // Retrieve the array of pixels that the rectangle bounds cover\r\n  const pixels = window.cornerstone.getPixels(\r\n    element,\r\n    roiCoordinates.left,\r\n    roiCoordinates.top,\r\n    roiCoordinates.width,\r\n    roiCoordinates.height\r\n  )\r\n\r\n  // Calculate the mean & standard deviation from the pixels and the rectangle details\r\n  const roiMeanStdDev = _calculateRectangleStats(pixels, roiCoordinates)\r\n\r\n  let meanStdDevSUV\r\n\r\n  if (modality === 'PT') {\r\n    meanStdDevSUV = {\r\n      mean: calculateSUV(image, roiMeanStdDev.mean, true) || 0,\r\n      stdDev: calculateSUV(image, roiMeanStdDev.stdDev, true) || 0,\r\n    }\r\n  }\r\n\r\n  // Calculate the image area from the rectangle dimensions and pixel spacing\r\n  const area =\r\n    roiCoordinates.width *\r\n    (pixelSpacing.colPixelSpacing || 1) *\r\n    (roiCoordinates.height * (pixelSpacing.rowPixelSpacing || 1))\r\n\r\n  const perimeter =\r\n    roiCoordinates.width * 2 * (pixelSpacing.colPixelSpacing || 1) +\r\n    roiCoordinates.height * 2 * (pixelSpacing.rowPixelSpacing || 1)\r\n\r\n  return {\r\n    area: area || 0,\r\n    perimeter,\r\n    count: roiMeanStdDev.count || 0,\r\n    mean: roiMeanStdDev.mean || 0,\r\n    variance: roiMeanStdDev.variance || 0,\r\n    stdDev: roiMeanStdDev.stdDev || 0,\r\n    min: roiMeanStdDev.min || 0,\r\n    max: roiMeanStdDev.max || 0,\r\n    meanStdDevSUV,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './AddNewNode.scss'\r\nimport { Radio, Select, Input } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst AddNewNode = props => {\r\n  const onLungChange = (e, id) => {\r\n    props.updateToolList(e.target.value, 'lung', id)\r\n  }\r\n\r\n  const onLobeChange = (e, id) => {\r\n    props.updateToolList(e.target.value, 'lobe', id)\r\n  }\r\n\r\n  const handleSelectChange = (val, id) => {\r\n    props.updateToolList(val, 'type', id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-new-node-box\">\r\n      <div className=\"title-box\">\r\n        <span className=\"title\">当前帧数：</span>\r\n        <span>第 {props.currentImageIdIndex} 帧</span>\r\n      </div>\r\n\r\n      {props.toolList?.map((item, index) => (\r\n        <div className=\"add-box\" key={item.uuid}>\r\n          <div className=\"list-header\">结节信息</div>\r\n          <div className=\"list\">\r\n            <span className=\"list-title\">肺：</span>\r\n            <Radio.Group value={item.lung} onChange={e => onLungChange(e, item.uuid)}>\r\n              <Radio value={'右肺'}>右肺</Radio>\r\n              <Radio value={'左肺'}>左肺</Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"list\">\r\n            <div className=\"list-title\">肺叶：</div>\r\n            <Radio.Group value={item.lobe} onChange={e => onLobeChange(e, item.uuid)}>\r\n              <Radio value={'上叶'}>上叶</Radio>\r\n              <Radio value={'中叶'}>中叶</Radio>\r\n              <Radio value={'下叶'}>下叶</Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"list\">\r\n            <div className=\"list-title\">类型：</div>\r\n            <Select\r\n              placeholder={'请选择结节类型'}\r\n              value={item.type}\r\n              style={{ width: 200, fontSize: 13 }}\r\n              onChange={e => handleSelectChange(e, item.uuid)}\r\n            >\r\n              <Option value=\"肺内实性\">肺内实性</Option>\r\n              <Option value=\"部分实性\">部分实性</Option>\r\n              <Option value=\"磨玻璃\">磨玻璃</Option>\r\n              <Option value=\"肺内钙化\">肺内钙化</Option>\r\n              <Option value=\"胸膜实性\">胸膜实性</Option>\r\n              <Option value=\"胸膜钙化\">胸膜钙化</Option>\r\n              <Option value=\"其他\">其他</Option>\r\n            </Select>\r\n          </div>\r\n          <div className=\"list\">\r\n            <span className=\"list-title\">建议：</span>\r\n            <Input\r\n              placeholder=\"这里输入结节备注信息\"\r\n              size=\"small\"\r\n              style={{ width: 200, height: 30, marginTop: 2, fontSize: 13 }}\r\n              value={item.suggest}\r\n              onChange={e => props.handleToolListTextareaChange(e, item.uuid)}\r\n              onBlur={e => props.handleToolListTextareaBlur(e, item.uuid)}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddNewNode\r\n","const fs = window.fs\r\nconst path = window.path\r\nconst dbSlot = 'resources/'\r\n// const appRemote = window.appRemote\r\nconst resourceDir = path.resolve(dbSlot)\r\nconst dbDir = path.resolve(dbSlot +  'db')\r\nconst filePath = window.join(dbDir, 'dicom.db')\r\nconst sqlite = window.sqlite.verbose()\r\nconst resourceExists = fs.existsSync(resourceDir)\r\nconst exists = fs.existsSync(dbDir)\r\nconsole.log('resourceDir: ',resourceDir)\r\n\r\nlet needInit = false\r\n// 如果不存在则创建\r\nif (!resourceExists) {\r\n  fs.mkdirSync(resourceDir)\r\n  console.log('resourceDir: ',resourceDir)\r\n}\r\nif (!exists) {\r\n  // console.log(dbDir)\r\n  fs.mkdirSync(dbDir)\r\n  console.log('dbDir: ',dbDir)\r\n}\r\n\r\n// 是否存在db文件\r\nif (!fs.existsSync(filePath)) {\r\n  fs.openSync(filePath, 'w')\r\n  // 初始化数据库\r\n  needInit = true\r\n}\r\n\r\nconst sqlite3 = new sqlite.Database(filePath)\r\n// console.log(appRemote.getPath('userData'))\r\n\r\nexport const createTable = function (sql) {\r\n  sqlite3.serialize(function () {\r\n    sqlite3.run(sql, function (err) {\r\n      if (null != err) {\r\n        console.log('ERR:', err)\r\n        return\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/// tilesData format; [[level, column, row, content], [level, column, row, content]]\r\nexport const insertData = (sql, objects, callback) => {\r\n  sqlite3.serialize(function () {\r\n    const stmt = sqlite3.prepare(sql)\r\n    // debugger\r\n    // console.log(objects)\r\n    for (let i = 0; i < objects.length; ++i) {\r\n      const temp = []\r\n      for (const k in objects[i]) {\r\n        if (objects[i].hasOwnProperty(k)) {\r\n          if (typeof objects[i][k] !== 'object') {\r\n            temp.push(objects[i][k])\r\n          }\r\n        }\r\n      }\r\n      stmt.run(temp)\r\n    }\r\n    stmt.finalize(callback)\r\n  })\r\n}\r\n\r\nexport const queryData = function (sql, callback) {\r\n  sqlite3.all(sql, function (err, rows) {\r\n    if (null != err) {\r\n      console.log('ERR:', err)\r\n      return\r\n    }\r\n\r\n    /// deal query data.\r\n    if (callback) {\r\n      callback(rows)\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteTableSql = function (name) {\r\n  const sql = 'DROP TABLE if exists ' + name\r\n  sqlite3.run(sql, function (err) {\r\n    if (null != err) {\r\n      // DB.printErrorInfo(err);\r\n      console.log('ERR:', err)\r\n    }\r\n  })\r\n}\r\nexport const executeSql = function (sql) {\r\n  sqlite3.run(sql, function (err) {\r\n    if (null != err) {\r\n      // DB.printErrorInfo(err);\r\n      console.log('ERR:', err)\r\n    }\r\n  })\r\n}\r\n\r\nexport const close = function () {\r\n  sqlite3.close()\r\n}\r\n\r\n/// export SqliteDB.\r\nexport default sqlite3\r\n\r\nexport const SQLContainer = {\r\n  dicomPatientSql:\r\n    'create table if not exists dicom_patient(id integer NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE, key varchar(64),patientID varchar(32),patientName varchar(32),patientGender varchar(32), patientBirthday varchar(32),acquisitionDate varchar(255),institution varchar(32),deviceManufacturer varchar(32),deviceModelName varchar(32),addTime varchar(32),studyNum varchar(32))',\r\n  dicomStudySql:\r\n    'create table if not exists dicom_study(id integer NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE, key varchar(64),patientID varchar(32),acquisitionDate varchar(255), studyID varchar(32), studyDescription varchar(32),addTime varchar(255),sequenceNum varchar(32))',\r\n  dicomSeriesSql:\r\n    'create table if not exists dicom_series(id integer NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE, key varchar(64),studyID varchar(32),seriesNo varchar(32),seriesDescription varchar(255), modality varchar(32),acquisitionDate varchar(255),size varchar(32),addTime varchar(32),framePath varchar(255),frameNum varchar(32))',\r\n  insertPatientSql:\r\n    'insert into dicom_patient(key, patientName,patientID,patientGender,patientBirthday,acquisitionDate,institution, deviceManufacturer,deviceModelName,addTime,studyNum) values(?,?, ?, ?,?, ?, ?,?, ?, ?,?)',\r\n  insertStudySql:\r\n    'insert into dicom_study(key, patientID,acquisitionDate, studyID, studyDescription,addTime,sequenceNum ) values(?,?,?,?,?,?,?)',\r\n  insertSeriesSql:\r\n    'insert into dicom_series(key, studyID,seriesNo,seriesDescription, modality,acquisitionDate,size,addTime,framePath,frameNum) values(?,?,?,?,?,?,?,?,?,?)',\r\n  queryPatientSql: 'select * from dicom_patient',\r\n  queryStudySql: 'select * from dicom_study',\r\n  querySeriesSql: 'select * from dicom_series',\r\n  nodeListSql:\r\n    'create table if not exists node_list(id integer NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE, patientID varchar(32), seriesNo varchar(32), imageIndex varchar(32), noduleName varchar(32), noduleNum varchar(32), lungLocation varchar(32), lobeLocation varchar(32), featureLabel varchar(32), noduleSize varchar(32), suggest varchar(32), nodeBox varchar(255), diameter varchar(32), maxHu varchar(32), minHu varchar(32), meanHu varchar(32), diameterNorm varchar(32), centerHu varchar(32))',\r\n  insertNodeListSql:\r\n    'insert into node_list(patientID, seriesNo, imageIndex, noduleName, noduleNum, lungLocation, lobeLocation, featureLabel, noduleSize, suggest, nodeBox, diameter, maxHu, minHu, meanHu, diameterNorm, centerHu ) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)',\r\n  queryNodeListSql: 'select * from node_list',\r\n\r\n  removePatientDuplicated:\r\n    'delete from dicom_patient where dicom_patient.rowid not in (select MAX(dicom_patient.rowid) from dicom_patient group by key, patientID)',\r\n  removeStudyDuplicated:\r\n    'delete from dicom_study where dicom_study.rowid not in (select MAX(dicom_study.rowid) from dicom_study group by key, studyID)',\r\n  removeSeriesDuplicated:\r\n    'delete from dicom_series where dicom_series.rowid not in (select MAX(dicom_series.rowid) from dicom_series group by key, seriesNo)',\r\n}\r\nexport const removeAllDuplicated = patientCallback => {\r\n  queryData(SQLContainer.removePatientDuplicated, res1 => {\r\n    queryData(SQLContainer.removeStudyDuplicated, res2 => {\r\n      queryData(SQLContainer.removeSeriesDuplicated, res3 => {\r\n        queryData(SQLContainer.queryPatientSql, patientCallback)\r\n        // queryData(SQLContainer.queryStudySql,studyCallback)\r\n        // queryData(SQLContainer.querySeriesSql,seriesCallback)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport const queryPatientData = (DBFunction, patientID) => {\r\n  const sql = patientID ? ` where patientID ='${patientID}'` : ''\r\n  queryData(SQLContainer.queryPatientSql + sql, DBFunction)\r\n}\r\n\r\nexport const queryStudyByPatientID = (patientID, DBFunction) => {\r\n  const sql = ` where patientID ='${patientID}'`\r\n  queryData(SQLContainer.queryStudySql + sql, DBFunction)\r\n}\r\n\r\nexport const querySeriesByStudyID = (studyID, DBFunction) => {\r\n  const sql = ` where studyID = '${studyID}'`\r\n  queryData(SQLContainer.querySeriesSql + sql, DBFunction)\r\n}\r\n\r\nexport const queryNodeList = (patientID, seriesNo, callback) => {\r\n  const sql = ` where patientID = '${patientID}' and seriesNo = '${seriesNo}'`\r\n  queryData(SQLContainer.queryNodeListSql + sql, callback)\r\n}\r\n\r\nexport const queryAllNodeList = (patientID, callback) => {\r\n  const sql = ` where patientID = '${patientID}'`\r\n  queryData(SQLContainer.queryNodeListSql + sql, callback)\r\n}\r\n\r\ncreateTable(SQLContainer.dicomPatientSql)\r\ncreateTable(SQLContainer.dicomStudySql)\r\ncreateTable(SQLContainer.dicomSeriesSql)\r\ncreateTable(SQLContainer.nodeListSql)\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport './Viewer.scss'\r\nimport LeftSidePanel from '../../components/LeftSidePanel/LeftSidePanel'\r\nimport Toolbar from '../../components/Toolbar/Toolbar'\r\nimport ViewerMain from '../../components/ViewerMain/ViewerMain'\r\nimport MiddleSidePanel from '../../components/MiddleSidePanel/MiddleSidePanel'\r\nimport cornerstone from 'cornerstone-core'\r\nimport cornerstoneTools from 'cornerstone-tools'\r\nimport MarkNoduleTool from '../../components/common/MarkNoduleTool/MarkNoduleTool'\r\nimport AddNoduleTool from '../../components/common/AddNoduleTool/AddNoduleTool'\r\nimport { Modal, message } from 'antd'\r\nimport Draggable from 'react-draggable'\r\nimport AddNewNode from '../../components/common/AddNewNode/AddNewNode'\r\nimport { insertData, queryNodeList, SQLContainer, queryAllNodeList } from '../../util/sqlite'\r\nimport * as XLSX from 'xlsx'\r\n\r\nconst Viewer = props => {\r\n  // 初始化\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [imagesConfig, setImagesConfig] = useState([])\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  // const [sequenceListData, setLeftSidePanelData] = useState([])\r\n  const [noduleList, setNoduleList] = useState([])\r\n  const [noduleMapList, setNoduleMapList] = useState([])\r\n\r\n  // 当前帧数\r\n  const [currentImageIdIndex, setCurrentImageIdIndex] = useState(0)\r\n\r\n  // 视图元素\r\n  const [cornerstoneElement, setCornerstoneElement] = useState(null)\r\n\r\n  // 保存 patientID\r\n  const [patientID, setPatientID] = useState('')\r\n\r\n  // 临时变量\r\n  const nodeRef = useRef()\r\n\r\n  useEffect(() => {\r\n    nodeRef.current = {\r\n      noduleList,\r\n      noduleMapList,\r\n      imagesConfig,\r\n    }\r\n  }, [imagesConfig, noduleList, noduleMapList])\r\n\r\n  // 影像信息初始化\r\n  useEffect(() => {\r\n    const seriesInfo = props.data.seriesInfo.find(item => item.active === true)\r\n    seriesInfo.imageIDList.then(res => {\r\n      if (res.length > 0) {\r\n        const imagesConfig = []\r\n        for (let i = 0; i < res.length; i++) {\r\n          imagesConfig.push(res[i])\r\n        }\r\n        setImagesConfig([...imagesConfig])\r\n      }\r\n    })\r\n  }, [props.data])\r\n\r\n  // 结节信息初始化\r\n  useEffect(() => {\r\n    const seriesInfo = props.data.seriesInfo.find(item => item.active === true)\r\n    const seriesNo = seriesInfo.seriesNo\r\n    const patientID = props.data.patientID\r\n    setPatientID(patientID)\r\n    queryNodeList(patientID, seriesNo, res => {\r\n      formatNodeData(res)\r\n    })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  // 点击序列切换\r\n  const getSelectedSeries = selectedSeries => {\r\n    setCurrentImageIdIndex(0)\r\n    selectedSeries.imageIDList.then(res => {\r\n      setImagesConfig([...res])\r\n      const seriesNo = selectedSeries.seriesNo\r\n      queryNodeList(patientID, seriesNo, res => {\r\n        formatNodeData(res)\r\n      })\r\n    })\r\n  }\r\n\r\n  // 启用工具\r\n  const setToolEnable = () => {\r\n    const WwwcTool = cornerstoneTools.WwwcTool\r\n    cornerstoneTools.addTool(WwwcTool)\r\n\r\n    const StackScrollMouseWheelTool = cornerstoneTools.StackScrollMouseWheelTool\r\n    const RectangleRoiTool = cornerstoneTools.RectangleRoiTool\r\n    const EraserTool = cornerstoneTools.EraserTool\r\n    const MagnifyTool = cornerstoneTools.MagnifyTool\r\n    const EllipticalRoiTool = cornerstoneTools.EllipticalRoiTool\r\n    const AngleTool = cornerstoneTools.AngleTool\r\n    const LengthTool = cornerstoneTools['LengthTool']\r\n    const PanTool = cornerstoneTools.PanTool\r\n    const ZoomTool = cornerstoneTools.ZoomTool\r\n\r\n    cornerstoneTools.addTool(StackScrollMouseWheelTool)\r\n    cornerstoneTools.addTool(RectangleRoiTool)\r\n    cornerstoneTools.addTool(EraserTool)\r\n    cornerstoneTools.addTool(MagnifyTool)\r\n    cornerstoneTools.addTool(EllipticalRoiTool)\r\n    cornerstoneTools.addTool(AngleTool)\r\n    cornerstoneTools.addTool(LengthTool)\r\n    cornerstoneTools.addTool(PanTool)\r\n    cornerstoneTools.addTool(ZoomTool)\r\n\r\n    // 自定义工具\r\n    cornerstoneTools.addTool(MarkNoduleTool)\r\n    cornerstoneTools.addTool(AddNoduleTool)\r\n\r\n    // 默认灰阶调节\r\n    cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 1 })\r\n  }\r\n\r\n  // 格式化结节数据\r\n  const formatNodeData = resultInfo => {\r\n    if (resultInfo.length === 0) {\r\n      if (cornerstoneElement) {\r\n        cornerstoneTools.clearToolState(cornerstoneElement, 'MarkNodule')\r\n        cornerstone.updateImage(cornerstoneElement)\r\n      }\r\n      setNoduleList([])\r\n      setNoduleMapList([])\r\n      return false\r\n    }\r\n    const nodulesList = []\r\n    const nodulesMapList = []\r\n    let index = 0\r\n    for (let i = 0; i < resultInfo.length; i++) {\r\n      const item = resultInfo[i]\r\n      const nodeBox = item.nodeBox.split(',')\r\n      nodulesList.push({\r\n        id: index,\r\n        checked: false,\r\n        active: false,\r\n        num: item.imageIndex,\r\n        noduleName: item.noduleName,\r\n        noduleNum: item.noduleNum,\r\n        lung: item.lungLocation,\r\n        lobe: item.lobeLocation,\r\n        type: item.featureLabel,\r\n        featureLabelG: item.featureLabel,\r\n        noduleSize: item.noduleSize,\r\n        suggest: item.suggest,\r\n        nodeBox: nodeBox,\r\n        diameter: item.diameter,\r\n        maxHu: item.maxHu,\r\n        minHu: item.minHu,\r\n        meanHu: item.meanHu,\r\n      })\r\n\r\n      index++\r\n\r\n      nodulesMapList.push({\r\n        noduleName: item.noduleName,\r\n        index: item.imageIndex,\r\n        startX: nodeBox[0],\r\n        startY: nodeBox[1],\r\n        endX: nodeBox[2],\r\n        endY: nodeBox[3],\r\n      })\r\n    }\r\n\r\n    setNoduleList([...nodulesList])\r\n    setNoduleMapList([...nodulesMapList])\r\n  }\r\n\r\n  // 导出结节信息\r\n  const handleExportExcel = () => {\r\n    queryAllNodeList(patientID, res => {\r\n      if (res.length === 0) {\r\n        message.warn(`当前病人暂无结节信息`)\r\n        return false\r\n      }\r\n\r\n      const fileName = 'test'\r\n      const sheet = XLSX.utils.json_to_sheet(res)\r\n\r\n      const wb = XLSX.utils.book_new()\r\n      XLSX.utils.book_append_sheet(wb, sheet, fileName)\r\n      const workbookBlob = workbook2blob(wb)\r\n      openDownload(workbookBlob, `${fileName}.csv`)\r\n    })\r\n  }\r\n\r\n  // 创建 blobUrl，通过 createObjectURL 实现下载\r\n  const openDownload = (blob, fileName) => {\r\n    if (typeof blob === 'object' && blob instanceof Blob) {\r\n      blob = URL.createObjectURL(blob)\r\n    }\r\n    const aLink = document.createElement('a')\r\n    aLink.href = blob\r\n    aLink.download = fileName || ''\r\n    let event\r\n    if (window.MouseEvent) event = new MouseEvent('click')\r\n    else {\r\n      event = document.createEvent('MouseEvents')\r\n      event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n    }\r\n    aLink.dispatchEvent(event)\r\n  }\r\n\r\n  // 将 workbook 转化为 blob 对象\r\n  const workbook2blob = workbook => {\r\n    const wopts = {\r\n      bookType: 'csv',\r\n      bookSST: false,\r\n      type: 'binary',\r\n    }\r\n    const wbout = XLSX.write(workbook, wopts)\r\n    const blob = new Blob([s2ab(wbout)], {\r\n      type: 'application/octet-stream',\r\n    })\r\n    return blob\r\n  }\r\n\r\n  // 将字符串转ArrayBuffer\r\n  const s2ab = s => {\r\n    const buf = new ArrayBuffer(s.length)\r\n    const view = new Uint8Array(buf)\r\n    for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xff\r\n    return buf\r\n  }\r\n\r\n  // ===========================================================\r\n\r\n  // 添加结节标注\r\n  const addNodeTool = (cornerstoneElement, index = 0) => {\r\n    const item = nodeRef.current.noduleMapList.filter(item => Number(item.index) === index)\r\n    const checkItme = nodeRef.current.noduleList.find(item => item.checked === true)\r\n\r\n    if (item.length >= 1) {\r\n      cornerstoneTools.clearToolState(cornerstoneElement, 'MarkNodule')\r\n      if (checkItme) {\r\n        const checkNode = item.filter(item => item.noduleName === checkItme.noduleName)\r\n        for (let i = 0; i < item.length; i++) {\r\n          const measurementData = {\r\n            visible: true,\r\n            active: true,\r\n            color: item[i].noduleName === (checkNode[0] && checkNode[0].noduleName) ? undefined : 'white',\r\n            invalidated: true,\r\n            handles: {\r\n              start: {\r\n                x: item[i].startX,\r\n                y: item[i].startY,\r\n                highlight: true,\r\n                active: true,\r\n              },\r\n              end: {\r\n                x: item[i].endX,\r\n                y: item[i].endY,\r\n                highlight: true,\r\n                active: true,\r\n              },\r\n            },\r\n          }\r\n          cornerstoneTools.addToolState(cornerstoneElement, 'MarkNodule', measurementData)\r\n        }\r\n      } else {\r\n        for (let i = 0; i < item.length; i++) {\r\n          const measurementData = {\r\n            visible: true,\r\n            active: true,\r\n            color: 'white',\r\n            invalidated: true,\r\n            handles: {\r\n              start: {\r\n                x: item[i].startX,\r\n                y: item[i].startY,\r\n                highlight: true,\r\n                active: true,\r\n              },\r\n              end: {\r\n                x: item[i].endX,\r\n                y: item[i].endY,\r\n                highlight: true,\r\n                active: true,\r\n              },\r\n            },\r\n          }\r\n          cornerstoneTools.addToolState(cornerstoneElement, 'MarkNodule', measurementData)\r\n        }\r\n      }\r\n      cornerstone.updateImage(cornerstoneElement)\r\n    }\r\n  }\r\n\r\n  // ===========================================================\r\n\r\n  // 结节点击事件\r\n  const onCheckChange = (index, num) => {\r\n    handleCheckedListClick(num)\r\n    noduleList.map(item => (item.checked = false))\r\n    noduleList[index].checked = true\r\n    setNoduleList([...noduleList])\r\n  }\r\n\r\n  // 列表点击事件\r\n  const handleCheckedListClick = (index, el) => {\r\n    const corElement = el || cornerstoneElement\r\n\r\n    // 设置当中帧数\r\n    setCurrentImageIdIndex(index)\r\n\r\n    // 设置当前视图选中项\r\n    if (corElement) {\r\n      changeActiveImage(index, corElement)\r\n    }\r\n  }\r\n\r\n  // ===========================================================\r\n\r\n  // 切换当前工具栏选中项\r\n  const changeToolActive = (checked, type) => {\r\n    if (checked) {\r\n      cornerstoneTools.setToolActive(type, { mouseButtonMask: 1 })\r\n    } else {\r\n      cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 1 })\r\n    }\r\n  }\r\n\r\n  // 设定当前选中工具状态\r\n  const setActiveToolState = () => {\r\n    const activeTool = document.querySelector('.tool-bar-box .active')\r\n    if (activeTool) {\r\n      cornerstoneTools.setToolActive(activeTool.dataset.type, { mouseButtonMask: 1 })\r\n    } else {\r\n      cornerstoneTools.setToolActive('Wwwc', { mouseButtonMask: 1 })\r\n    }\r\n  }\r\n\r\n  // 工具栏切换\r\n  const handleToolbarClick = (type, checked) => {\r\n    let viewport = cornerstone.getViewport(cornerstoneElement)\r\n    switch (type) {\r\n      case 'Magnify':\r\n      case 'RectangleRoi':\r\n      case 'Eraser':\r\n      case 'EllipticalRoi':\r\n      case 'Angle':\r\n      case 'Length':\r\n      case 'MarkNodule':\r\n      case 'AddNodule':\r\n      case 'Zoom':\r\n      case 'Pan':\r\n        changeToolActive(checked, type)\r\n        break\r\n      case 'hflip':\r\n        viewport.hflip = !viewport.hflip\r\n        cornerstone.setViewport(cornerstoneElement, viewport)\r\n        break\r\n      case 'vflip':\r\n        viewport.vflip = !viewport.vflip\r\n        cornerstone.setViewport(cornerstoneElement, viewport)\r\n        break\r\n      case 'playClip':\r\n        if (checked) {\r\n          cornerstoneTools.playClip(cornerstoneElement, 10)\r\n        } else {\r\n          cornerstoneTools.stopClip(cornerstoneElement)\r\n        }\r\n        break\r\n      case 'Reset':\r\n        cornerstone.reset(cornerstoneElement)\r\n        windowChange(cornerstoneElement, cornerstone.getImage(cornerstoneElement), 2)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  // 切换当前视图\r\n  const changeActiveImage = (index, cornerstoneElement) => {\r\n    cornerstone.loadImage(nodeRef.current.imagesConfig[index]).then(image => {\r\n      cornerstone.displayImage(cornerstoneElement, image)\r\n      cornerstoneTools.addStackStateManager(cornerstoneElement, ['stack'])\r\n      cornerstoneTools.addToolState(cornerstoneElement, 'stack', {\r\n        currentImageIdIndex: Number(index),\r\n        imageIds: nodeRef.current.imagesConfig,\r\n      })\r\n    })\r\n  }\r\n\r\n  // ===========================================================\r\n\r\n  // 格式化提交数据\r\n  const formatPostData = () => {\r\n    const seriesInfo = props.data.seriesInfo.find(item => item.active === true)\r\n    const item = noduleList[noduleList.length - 1]\r\n    const postData = [\r\n      {\r\n        patientID: props.data.patientID,\r\n        seriesNo: seriesInfo.seriesNo,\r\n        imageIndex: item.num,\r\n        noduleName: item.noduleName,\r\n        noduleNum: item.noduleNum,\r\n        lungLocation: item.lung,\r\n        lobeLocation: item.lobe,\r\n        featureLabel: item.type,\r\n        noduleSize: item.noduleSize,\r\n        suggest: item.suggest,\r\n        nodeBox: item.nodeBox.toString(),\r\n        diameter: item.diameter,\r\n        maxHu: item.maxHu,\r\n        minHu: item.minHu,\r\n        meanHu: item.meanHu,\r\n        diameterNorm: item.diameterNorm,\r\n        centerHu: item.centerHu,\r\n      },\r\n    ]\r\n    return postData\r\n  }\r\n\r\n  // 暂存结节数据\r\n  const saveResults = () => {\r\n    const postData = formatPostData()\r\n    insertData(SQLContainer.insertNodeListSql, postData)\r\n    message.success(`结节结果保存成功`)\r\n  }\r\n\r\n  // ===========================================================\r\n\r\n  const draggleRef = React.createRef()\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [modalDisabled, setModalDisabled] = useState(true)\r\n  const [modalBounds, setModalBounds] = useState({ left: 0, top: 0, bottom: 0, right: 0 })\r\n  const [toolList, setToolList] = useState([])\r\n\r\n  // 格式化新增结节数据\r\n  const formatNewNodeData = data => {\r\n    const toolList = []\r\n    toolList.push({\r\n      uuid: data.uuid,\r\n      lung: '',\r\n      lobe: '',\r\n      type: undefined,\r\n      suggest: '',\r\n      cachedStats: data.cachedStats,\r\n      startX: data.handles.start.x,\r\n      startY: data.handles.start.y,\r\n      endX: data.handles.end.x,\r\n      endY: data.handles.end.y,\r\n    })\r\n    setToolList(toolList)\r\n  }\r\n\r\n  // 更新结节事件\r\n  const updateToolList = (val, type, id) => {\r\n    const checkItme = toolList.find(item => item.uuid === id)\r\n    if (checkItme && type === 'lung') {\r\n      checkItme.lung = val\r\n    }\r\n    if (checkItme && type === 'lobe') {\r\n      checkItme.lobe = val\r\n    }\r\n    if (checkItme && type === 'type') {\r\n      checkItme.type = val\r\n    }\r\n    setToolList([...toolList])\r\n  }\r\n\r\n  // 更新医生影像建议内容\r\n  const handleToolListTextareaChange = (e, id) => {\r\n    const checkItme = toolList.find(item => item.uuid === id)\r\n    if (checkItme) {\r\n      checkItme.suggest = e.target.value\r\n      setToolList([...toolList])\r\n    }\r\n  }\r\n\r\n  // 建议框失去焦点后保存数据\r\n  const handleToolListTextareaBlur = (e, id) => {\r\n    const checkItme = toolList.find(item => item.uuid === id)\r\n    if (checkItme) {\r\n      checkItme.suggest = e.target.value\r\n      setToolList([...toolList])\r\n    }\r\n  }\r\n\r\n  const handleOk = e => {\r\n    for (let i = 0; i < toolList.length; i++) {\r\n      if (!toolList[i].lung) {\r\n        message.warn(`请选择结节的肺属性后在进行新增`)\r\n        return false\r\n      }\r\n\r\n      if (!toolList[i].lobe) {\r\n        message.warn(`请选择结节的肺叶属性后在进行新增`)\r\n        return false\r\n      }\r\n\r\n      if (!toolList[i].type) {\r\n        message.warn(`请选择结节的类型属性后在进行新增`)\r\n        return false\r\n      }\r\n    }\r\n\r\n    const tool = cornerstoneTools.getToolState(cornerstoneElement, 'AddNodule')\r\n    const newToolData = [...tool.data]\r\n    const toolData = newToolData.pop()\r\n\r\n    const startX = toolData.handles.start.x.toFixed(2)\r\n    const startY = toolData.handles.start.y.toFixed(2)\r\n    const endX = toolData.handles.end.x.toFixed(2)\r\n    const endY = toolData.handles.end.y.toFixed(2)\r\n    const rowPixelSpacing = cornerstone.getImage(cornerstoneElement).rowPixelSpacing\r\n\r\n    const imageId = cornerstone.getImage(cornerstoneElement).imageId\r\n    const imageIndex = nodeRef.current.imagesConfig.findIndex(item => item === imageId)\r\n\r\n    const newNoduleList = {\r\n      active: false,\r\n      checked: false,\r\n      lobe: toolList[0].lobe,\r\n      lung: toolList[0].lung,\r\n      noduleName: `nodule_${toolList[0].uuid}`,\r\n      noduleNum: toolList[0].uuid,\r\n      num: imageIndex,\r\n      suggest: toolList[0].suggest,\r\n      type: toolList[0].type,\r\n      diameter: `${(Math.abs(endX - startX) * rowPixelSpacing).toFixed(2)}mm*${(\r\n        Math.abs(endY - startY) * rowPixelSpacing\r\n      ).toFixed(2)}mm`,\r\n      maxHu: toolList[0].cachedStats.max,\r\n      minHu: toolList[0].cachedStats.min,\r\n      meanHu: toolList[0].cachedStats.mean.toFixed(2),\r\n      diameterNorm: Math.sqrt(toolList[0].cachedStats.area).toFixed(2),\r\n      noduleSize: (Math.pow(Math.sqrt(toolList[0].cachedStats.area) / 2, 3) * Math.PI).toFixed(2),\r\n      centerHu: cornerstone.getPixels(\r\n        cornerstoneElement,\r\n        (Number(startX) + Number(endX)) / 2,\r\n        (Number(startY) + Number(endY)) / 2,\r\n        1,\r\n        1\r\n      )[0],\r\n      nodeBox: [startX, startY, endX, endY],\r\n    }\r\n\r\n    const newNoduleMapList = {\r\n      startX: startX,\r\n      startY: startY,\r\n      endX: endX,\r\n      endY: endY,\r\n      noduleNum: toolList[0].uuid,\r\n      noduleName: `nodule_${toolList[0].uuid}`,\r\n      index: imageIndex,\r\n    }\r\n\r\n    noduleList.push(newNoduleList)\r\n    setNoduleList([...noduleList])\r\n\r\n    noduleMapList.push(newNoduleMapList)\r\n    setNoduleMapList([...noduleMapList])\r\n\r\n    saveResults()\r\n\r\n    cornerstoneTools.clearToolState(cornerstoneElement, 'AddNodule')\r\n\r\n    setTimeout(() => {\r\n      addNodeTool(cornerstoneElement, imageIndex)\r\n    }, 500)\r\n\r\n    setModalVisible(false)\r\n  }\r\n\r\n  const handleCancel = e => {\r\n    setModalVisible(false)\r\n    handleCloseCallback()\r\n  }\r\n\r\n  const onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window.document.documentElement\r\n    const targetRect = draggleRef.current?.getBoundingClientRect()\r\n    if (!targetRect) {\r\n      return\r\n    }\r\n    setModalBounds({\r\n      left: -targetRect.left + uiData.x,\r\n      right: clientWidth - (targetRect.right - uiData.x),\r\n      top: -targetRect.top + uiData.y,\r\n      bottom: clientHeight - (targetRect.bottom - uiData.y),\r\n    })\r\n  }\r\n\r\n  // =======================================================\r\n\r\n  const showMarkDialog = (e, cornerstoneElement) => {\r\n    const tool = cornerstoneTools.getToolState(cornerstoneElement, 'AddNodule')\r\n    let mark = document.getElementById('mark')\r\n    if (tool && mark && mark.classList.contains('active')) {\r\n      const newToolData = [...tool.data]\r\n      const toolData = newToolData.pop()\r\n      formatNewNodeData(toolData)\r\n      setModalVisible(true)\r\n    }\r\n  }\r\n\r\n  // 工具操作函数\r\n  const handleCloseCallback = () => {\r\n    const tool = cornerstoneTools.getToolState(cornerstoneElement, 'AddNodule')\r\n    const toolData = tool.data.pop()\r\n    cornerstoneTools.removeToolState(cornerstoneElement, 'AddNodule', toolData)\r\n    cornerstone.updateImage(cornerstoneElement)\r\n    setModalVisible(false)\r\n  }\r\n\r\n  // 监听视图变化事件\r\n  const handleElementEnabledEvt = elementEnabledEvt => {\r\n    const cornerstoneElement = elementEnabledEvt.detail.element\r\n    setCornerstoneElement(cornerstoneElement)\r\n\r\n    let toolFlag = true\r\n\r\n    cornerstoneElement.addEventListener('cornerstonenewimage', newImage => {\r\n      const curImageId = newImage.detail.image.imageId\r\n      const index = nodeRef.current.imagesConfig.findIndex(item => item === curImageId)\r\n\r\n      if (toolFlag) {\r\n        setToolEnable()\r\n        toolFlag = false\r\n      }\r\n\r\n      cornerstoneTools.setToolActive('MarkNodule', { mouseButtonMask: 1 })\r\n      cornerstoneTools.setToolActive('StackScrollMouseWheel', {})\r\n\r\n      setTimeout(() => {\r\n        addNodeTool(cornerstoneElement, index)\r\n        setActiveToolState()\r\n      }, 0)\r\n    })\r\n\r\n    // cornerstoneElement.addEventListener('cornerstoneimageloaded', newImage => {\r\n    //   console.log(1)\r\n    // })\r\n\r\n    // cornerstoneElement.addEventListener('cornerstoneimagerendered', imageRenderedEvent => {\r\n    //   const curImageId = imageRenderedEvent.detail.image.imageId\r\n    //   const index = imagesConfig.findIndex(item => item === curImageId)\r\n    //   setCurrentImageIdIndex(index)\r\n    // })\r\n\r\n    cornerstoneElement.addEventListener('cornerstonetoolsmeasurementcompleted', e => {\r\n      const tool = cornerstoneTools.getToolState(cornerstoneElement, 'AddNodule')\r\n      if (tool) {\r\n        showMarkDialog(e, cornerstoneElement)\r\n      }\r\n    })\r\n  }\r\n\r\n  // 调整窗宽窗位\r\n  const windowChange = (element, image, index) => {\r\n    /*\r\n     * index = 1，ww: default, wl: default\r\n     * index = 2，ww: 1500, wl: -450\r\n     * index = 3，ww: 250, wl: 30\r\n     * index = 4，ww: 1000, wl: 250\r\n     * index = 5，ww: 300, wl: 40\r\n     */\r\n    const viewportDefault = cornerstone.getDefaultViewportForImage(element, image)\r\n    const viewport = cornerstone.getViewport(element)\r\n    viewport.voiLUT = undefined\r\n\r\n    if (index === 1) {\r\n      viewport.voi.windowWidth = viewportDefault.voi.windowWidth\r\n      viewport.voi.windowCenter = viewportDefault.voi.windowCenter\r\n    } else if (index === 2) {\r\n      viewport.voi.windowWidth = 1500\r\n      viewport.voi.windowCenter = -400\r\n    } else if (index === 3) {\r\n      viewport.voi.windowWidth = 250\r\n      viewport.voi.windowCenter = 30\r\n    } else if (index === 4) {\r\n      viewport.voi.windowWidth = 1000\r\n      viewport.voi.windowCenter = 250\r\n    } else if (index === 5) {\r\n      viewport.voi.windowWidth = 300\r\n      viewport.voi.windowCenter = 40\r\n    }\r\n\r\n    cornerstone.setViewport(element, viewport)\r\n  }\r\n\r\n  return (\r\n    <div className=\"viewer-box\">\r\n      <Toolbar\r\n        handleExportExcel={handleExportExcel}\r\n        handleToolbarClick={handleToolbarClick}\r\n        setShowViewer={props.setShowViewer}\r\n        globalData={props.data}\r\n      />\r\n      <div className=\"viewer-center-box\">\r\n        <LeftSidePanel patientInfo={props.data} getSelectedSeries={getSelectedSeries} />\r\n        <ViewerMain\r\n          handleToolbarClick={handleToolbarClick}\r\n          handleElementEnabledEvt={handleElementEnabledEvt}\r\n          imagesConfig={imagesConfig}\r\n          noduleList={noduleList}\r\n          imageIdIndex={Number(currentImageIdIndex)}\r\n        />\r\n        <div className=\"middle-box-wrap\">\r\n          <MiddleSidePanel\r\n            data={props.data}\r\n            handleCheckedListClick={handleCheckedListClick}\r\n            onCheckChange={onCheckChange}\r\n            noduleList={noduleList}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        title={\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              cursor: 'move',\r\n            }}\r\n            onMouseOver={() => {\r\n              if (modalDisabled) {\r\n                setModalDisabled(false)\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              setModalDisabled(true)\r\n            }}\r\n            onFocus={() => {}}\r\n            onBlur={() => {}}\r\n            // end\r\n          >\r\n            新增结节\r\n          </div>\r\n        }\r\n        okText={'确定'}\r\n        cancelText={'取消'}\r\n        visible={modalVisible}\r\n        maskClosable={false}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        modalRender={modal => (\r\n          <Draggable disabled={modalDisabled} bounds={modalBounds} onStart={(event, uiData) => onStart(event, uiData)}>\r\n            <div ref={draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n      >\r\n        <AddNewNode\r\n          handleToolListTextareaChange={handleToolListTextareaChange}\r\n          handleToolListTextareaBlur={handleToolListTextareaBlur}\r\n          updateToolList={updateToolList}\r\n          currentImageIdIndex={currentImageIdIndex}\r\n          toolList={toolList}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Viewer\r\n","import React from 'react'\r\nimport './SelectFile.scss'\r\nimport * as path from \"path\";\r\nimport { Button } from 'antd'\r\nimport cornerstone from 'cornerstone-core'\r\nimport {readFileInfo, addDicomFile, dicomDateTimeToLocale, keyFormat} from \"../../util\";\r\nimport {insertData, SQLContainer} from \"../../util/sqlite\";\r\n\r\nconst SelectFile = (props) => {\r\n    const output = (sth) => {\r\n        console.log('output: ', props.data.output)\r\n    }\r\n    const cdHandler = (sth) => {\r\n        console.log('cd: ', sth)\r\n    }\r\n    let patientList = []\r\n    let studyList = []\r\n    let seriesList = []\r\n    let indexKey = 0\r\n    const creatPatient = (dict, time) => {\r\n        patientList.push(\r\n            {\r\n                key: keyFormat(dict['00100020'].Value[0] + '_'+ dict['00080022'].Value[0]),\r\n                patientName: dict['00100010'].Value[0],\r\n                patientID: dict['00100020'].Value[0],\r\n                patientGender: dict['00100040'].Value[0],\r\n                patientBirthday: dict['00100030'].Value[0],\r\n                acquisitionDate: dicomDateTimeToLocale(dict['00080022'].Value[0] + '.' + dict['00080032'].Value[0]),\r\n                institution: dict['00080080'].Value[0],\r\n                deviceManufacturer: dict['00080070'].Value[0],\r\n                deviceModelName: dict['00081090'].Value[0],\r\n                addTime: time,\r\n                studyNum: 0,\r\n                studyInfo: []\r\n            }\r\n        )\r\n    }\r\n    const createStudy = (dict, time) => {\r\n        studyList.push({\r\n            key: dict['00100020'].Value[0] + '_' + dict['00200010'].Value[0],\r\n            patientID: dict['00100020'].Value[0],\r\n            acquisitionDate:  dicomDateTimeToLocale(dict['00080022'].Value[0] + '.' + dict['00080032'].Value[0]),\r\n            seriesInfo: [],\r\n            studyID: dict['00200010'].Value[0],\r\n            studyDescription: dict['00081030'].Value[0],\r\n            addTime: time,\r\n            sequenceNum: 0\r\n        })\r\n    }\r\n    const createSeries = (dict, time) => {\r\n        seriesList.push( {\r\n            key: dict['00100020'].Value[0] + '_' + dict['00200011'].Value[0],\r\n            studyID: dict['00200010'].Value[0],\r\n            seriesNo: dict['00200011'].Value[0],\r\n            seriesDescription: dict['0008103E'].Value[0],\r\n            // layer\r\n            modality: dict['00080060'].Value[0],\r\n            acquisitionDate:  dicomDateTimeToLocale(dict['00080022'].Value[0] + '.' + dict['00080032'].Value[0]),\r\n            size: dict['00280010'].Value[0] + ' x ' + dict['00280011'].Value[0],\r\n            addTime: time,\r\n            patientInfo: {\r\n                patientName: dict['00100010'].Value[0],\r\n                patientID: dict['00100020'].Value[0],\r\n                patientGender: dict['00100040'].Value[0],\r\n                patientBirthday: dict['00100030'].Value[0],\r\n            },\r\n            // frame: [],\r\n            framePath: [],\r\n            frameNum: 0\r\n        })\r\n    }\r\n\r\n    const createDataTables= (file) => {\r\n        const now = new Date().toLocaleString()\r\n        const dicomDict = readFileInfo(file)\r\n        // console.log('dict: ',dicomDict)\r\n        const dict = dicomDict['dict']\r\n        indexKey++\r\n        if (patientList.length <= 0) {\r\n            creatPatient(dict, now)\r\n            createStudy(dict, now)\r\n            createSeries(dict, now)\r\n        }\r\n        const indexPatient = patientList.findIndex( x => x.patientID === dict['00100020'].Value[0])\r\n        if (indexPatient === -1) {\r\n            creatPatient(dict, now)\r\n        }\r\n        const indexStudy = studyList.findIndex( x => x.studyID === dict['00200010'].Value[0])\r\n        if (indexStudy === -1) {\r\n            createStudy(dict, now)\r\n        }\r\n        const indexSeries = seriesList.findIndex( x => x.seriesNo === dict['00200011'].Value[0])\r\n        if (indexSeries === -1) {\r\n            createSeries(dict, now)\r\n        }\r\n        seriesList.forEach(ele => {\r\n            if (ele.seriesNo === dict['00200011'].Value[0]) {\r\n                // console.log('same s')\r\n                ele.frameNum += 1\r\n                // attach the imageId info with series\r\n                // addDicomFile(file).then(imageId => {\r\n                //     ele.frame.push(imageId)\r\n                    ele.framePath.push(file.path)\r\n                // })\r\n            }\r\n        })\r\n    }\r\n\r\n    const DicomBuilder = () => {\r\n        studyList.forEach(studyEle => {\r\n            seriesList.forEach(sEle => {\r\n                if (studyEle.studyID === sEle.studyID) {\r\n                    studyEle.sequenceNum ++\r\n                    studyEle.seriesInfo.push(sEle)\r\n                }\r\n            })\r\n        })\r\n        patientList.forEach(pEle => {\r\n            studyList.forEach(studyEle => {\r\n                if (pEle.patientID === studyEle.patientID) {\r\n                    pEle.studyNum ++\r\n                    pEle.studyInfo.push(studyEle)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const importHandler = () => {\r\n\r\n        const inputObj = document.createElement('input')\r\n        // 设置属性\r\n        inputObj.setAttribute('id', '_ef')\r\n        inputObj.setAttribute('type', 'file')\r\n        inputObj.setAttribute('accept', '*/dicom,.dcm, image/dcm, */dcm, .dicom')\r\n        inputObj.setAttribute('multiple', '')\r\n        inputObj.setAttribute('style', 'visibility:hidden')\r\n        inputObj.setAttribute('webkitdirectory', '')\r\n        inputObj.setAttribute('directory', '')\r\n        // 添加到DOM中\r\n        document.body.appendChild(inputObj)\r\n        // 添加事件监听器\r\n        inputObj.addEventListener('change', openDir)\r\n        // // 模拟点击\r\n        inputObj.click()\r\n    }\r\n    // const getDicomFromDB = (objects) => {\r\n    //     props.addDicomFromUpload([...objects])\r\n    // }\r\n    const checkDICMType = (file, dicmBox) => {\r\n        let reader = new FileReader();\r\n        return new Promise((resolve, reject) => {\r\n            reader.readAsArrayBuffer(file);\r\n            reader.onload = (evt) => {\r\n                if (evt.target.readyState === FileReader.DONE) {\r\n                    let array = new Uint8Array(evt.target.result);\r\n                    let s = \"\";\r\n                    let start = 128, end = 132;\r\n                    for (let i = start; i < end; ++i) {\r\n                        s += String.fromCharCode(array[i]);\r\n                    }\r\n                    if (s == \"DICM\") {\r\n                        dicmBox.push(file)\r\n                        resolve(file)\r\n                    } else {\r\n                        resolve(null)\r\n                        console.log(file.name,' is not dicom')\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const openDir = () => {\r\n        const inputObj2 = document.getElementById('_ef')\r\n        const files = inputObj2.files\r\n        // console.log(files)\r\n        props.setLoading(true)\r\n        try {\r\n            // 临时变量的值赋给输出路径\r\n            // this.dirPath = files\r\n            if (files.length > 0) {\r\n                const fileArr = new Set(files)\r\n                const tempArr = Array.from(fileArr)\r\n                // console.log('File list: ', tempArr)\r\n                // check the files are dcm or not\r\n                const promises = []\r\n                const dicmBox = []\r\n                for(let i of tempArr) {\r\n                    promises.push(checkDICMType(i, dicmBox))\r\n                }\r\n                Promise.all(promises).then(res=> {\r\n                    // console.log(res,',',dicmBox)\r\n                    if (dicmBox.length > 0) {\r\n                        dicmBox.forEach(ele => {\r\n                            createDataTables(ele)\r\n                        })\r\n                        DicomBuilder()\r\n                        console.log('list: ', patientList, ', d: ', studyList,', s: ', seriesList)\r\n                        if (patientList.length > 0) {\r\n                            insertData(SQLContainer.insertPatientSql, patientList);\r\n                            insertData(SQLContainer.insertStudySql, studyList);\r\n                            seriesList.forEach(ele => {\r\n                                ele.framePath = ele.framePath.toString()\r\n                            })\r\n                            console.log('s: ',seriesList)\r\n                            insertData(SQLContainer.insertSeriesSql, seriesList, props.removeDuplicates);\r\n                        }\r\n                        // props.importDICOM(dicmBox)\r\n                    } else {\r\n                        alert('not all dicom files!!!!')\r\n                    }\r\n                }).catch(reason => {\r\n                    console.log(reason)\r\n                })\r\n            }\r\n            // 移除事件监听器\r\n            inputObj2.removeEventListener('change', function () {})\r\n            // 从DOM中移除input\r\n            document.body.removeChild(inputObj2)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"select-file-box\">\r\n      <Button onClick={() => {\r\n          importHandler()\r\n      }}>导入</Button>\r\n      <Button>光盘导入</Button>\r\n      <Button onClick={() => output()}>导出</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectFile\r\n","import React, { useState, useEffect } from 'react'\r\nimport './StudyList.scss'\r\nimport { Table, Input, Button, Spin } from 'antd'\r\nimport SelectFile from '../../components/SelectFile/SelectFile'\r\nimport {\r\n  queryStudyByPatientID,\r\n  querySeriesByStudyID,\r\n  queryPatientData,\r\n  deleteTableSql,\r\n  queryData,\r\n  SQLContainer, removeAllDuplicated,\r\n} from '../../util/sqlite'\r\nimport { formatFile } from '../../util/index'\r\n\r\nconst dicomColumns = [\r\n  {\r\n    title: '姓名',\r\n    dataIndex: 'patientName',\r\n  },\r\n  {\r\n    title: '性别',\r\n    dataIndex: 'patientGender',\r\n  },\r\n  {\r\n    title: '生日',\r\n    dataIndex: 'patientBirthday',\r\n  },\r\n  {\r\n    title: 'PatientID',\r\n    dataIndex: 'patientID',\r\n  },\r\n  {\r\n    title: '检测次数',\r\n    dataIndex: 'studyNum',\r\n  },\r\n  {\r\n    title: '检查时间',\r\n    dataIndex: 'acquisitionDate',\r\n  },\r\n  {\r\n    title: '添加时间',\r\n    dataIndex: 'addTime',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => new Date(a.addTime) - new Date(b.addTime),\r\n  },\r\n  {\r\n    title: '上次修改时间',\r\n    dataIndex: 'LastModifiedTime',\r\n  },\r\n  {\r\n    title: '医院',\r\n    dataIndex: 'institution',\r\n  },\r\n  {\r\n    title: 'CT机品牌型号',\r\n    dataIndex: 'deviceManufacturer',\r\n  },\r\n]\r\n\r\nconst testColumns = [\r\n  {\r\n    title: '检测日期',\r\n    dataIndex: 'acquisitionDate',\r\n  },\r\n  {\r\n    title: '检测ID',\r\n    dataIndex: 'studyID',\r\n  },\r\n  {\r\n    title: '检测描述',\r\n    dataIndex: 'studyDescription',\r\n  },\r\n  {\r\n    title: '序列数',\r\n    dataIndex: 'sequenceNum',\r\n  },\r\n  {\r\n    title: '添加时间',\r\n    dataIndex: 'addTime',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => new Date(a.addTime) - new Date(b.addTime),\r\n  },\r\n]\r\n\r\nconst listColumns = [\r\n  {\r\n    title: '序列号',\r\n    dataIndex: 'seriesNo',\r\n  },\r\n  {\r\n    title: '序列描述',\r\n    dataIndex: 'seriesDescription',\r\n  },\r\n  // {\r\n  //   title: '层厚',\r\n  //   dataIndex: 'thick',\r\n  // },\r\n  {\r\n    title: '形式',\r\n    dataIndex: 'modality',\r\n  },\r\n  {\r\n    title: '影像大小',\r\n    dataIndex: 'size',\r\n  },\r\n  {\r\n    title: '帧数',\r\n    dataIndex: 'frameNum',\r\n  },\r\n  {\r\n    title: '添加时间',\r\n    dataIndex: 'acquisitionDate',\r\n    // defaultSortOrder: 'descend',\r\n    // sorter: (a, b) => new Date(a.acquisitionDate) - new Date(b.acquisitionDate),\r\n  },\r\n]\r\n\r\nconst importFilesColumns = [\r\n  {\r\n    title: '文件名',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '大小',\r\n    dataIndex: 'size',\r\n  },\r\n  {\r\n    title: '添加时间',\r\n    dataIndex: 'date',\r\n  },\r\n]\r\n\r\nconst StudyList = props => {\r\n  const [patientData, setPatientData] = useState([])\r\n  const [studyData, setStudyData] = useState([])\r\n  const [seriesData, setSeriesData] = useState([])\r\n  const [DICOMFiles, importDICOM] = useState([])\r\n  const [selectedData, setSelectedData] = useState([])\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    console.log('t d: ', patientData)\r\n    queryPatientData(getDicomFromDB)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const getDicomFromDB = objects => {\r\n    setPatientData(objects)\r\n  }\r\n  const addDicomFromUpload = objects => {\r\n    setPatientData(patientData.concat(objects))\r\n  }\r\n\r\n  const getStudyFromDB = objects => {\r\n    setStudyData(objects)\r\n  }\r\n  const getSeriesFromDB = objects => {\r\n    setSeriesData(objects)\r\n    setLoading(false)\r\n  }\r\n\r\n  const patientRowClicked = record => {\r\n    // console.log('row: ', record)\r\n    if (selectedData.patientID !== record.patientID) {\r\n      setSeriesData(null)\r\n    }\r\n    queryStudyByPatientID(record.patientID, getStudyFromDB)\r\n    setSelectedData(record)\r\n  }\r\n\r\n  const getAllByPatientID = studyList => {\r\n    // set the first of list as study record\r\n    selectedData.studyInfo = studyList[0]\r\n    querySeriesByStudyID(selectedData.studyInfo.studyID, seriesGetAll)\r\n  }\r\n\r\n  const patientGetAll = record => {\r\n    queryStudyByPatientID(record.patientID, getAllByPatientID)\r\n  }\r\n  const studyGetAll = record => {\r\n    selectedData.studyInfo = record\r\n    querySeriesByStudyID(record.studyID, seriesGetAll)\r\n  }\r\n  const seriesGetAll = (seriesList, selectedIndex) => {\r\n    // console.log(selectedIndex)\r\n    // check whether user get all series by selected from patient and study table or from series table\r\n    if (selectedIndex) {\r\n      selectedData.seriesInfo = Array.isArray(seriesData) ? seriesData : [seriesData]\r\n      selectedData.seriesInfo[selectedIndex].active = true\r\n    } else {\r\n      selectedData.seriesInfo = Array.isArray(seriesList) ? seriesList : [seriesList]\r\n      selectedData.seriesInfo[0].active = true\r\n    }\r\n    const promises = []\r\n    // get all imageID and bind all imageIds to series\r\n    selectedData.seriesInfo.forEach(ele => {\r\n      ele.imageIDList = formatFile(ele.framePath)\r\n      promises.push(ele.imageIDList)\r\n    })\r\n    Promise.all(promises).then(res => {\r\n      // console.log('promises:', res)\r\n      // check if file is inexistent when path is exists in DB\r\n      if (res.findIndex(x => x == undefined) >= 0) {\r\n        console.log('no file be found')\r\n      } else {\r\n        // set the dcm image as cover\r\n        res.forEach((ele, index) => {\r\n          selectedData.seriesInfo[index].cover = ele[0]\r\n        })\r\n        props.setData(selectedData)\r\n        // console.log('all: ', selectedData)\r\n        props.setShowViewer(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const studyRowClicked = (record, index) => {\r\n    // console.log('index: ', index, 'row: ', record)\r\n    querySeriesByStudyID(record.studyID, getSeriesFromDB)\r\n  }\r\n\r\n  const seriesRowClicked = (record, index) => {\r\n    // console.log('index: ', index, 'row: ', record)\r\n  }\r\n  const printLog = log => {\r\n    // console.log(log)\r\n  }\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\r\n    },\r\n    getCheckboxProps: record => ({\r\n      // disabled: record.name === 'Disabled User',\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  }\r\n  const removeDuplicates = () => {\r\n    removeAllDuplicated(getDicomFromDB)\r\n    // 关闭study 和series列表，需要手动打开\r\n    getStudyFromDB([])\r\n    getSeriesFromDB([])\r\n  }\r\n\r\n  return (\r\n    <div className=\"study-list-container\">\r\n      {\r\n        isLoading ? <div className=\"mask\">\r\n          <Spin size=\"large\" />\r\n        </div> : null\r\n      }\r\n      <div>\r\n              <SelectFile importDICOM={importDICOM} setPatientData={setPatientData} setData={props.setData}\r\n                          setLoading={setLoading}\r\n                          addDicomFromUpload={addDicomFromUpload} removeDuplicates={removeDuplicates}/>\r\n              <div className=\"search-box-wrap\">\r\n                <div className=\"search-box\">\r\n                  <div className=\"search-group\">\r\n                    <span>姓名：</span>\r\n                    <Input style={{ width: 200 }} placeholder=\"请输入姓名\" />\r\n                  </div>\r\n                  <div className=\"search-btns\">\r\n                    <Button type=\"primary\">检索</Button>\r\n                    <Button onClick={e => props.setShowViewer(true)} type=\"primary\">\r\n                      重置\r\n                    </Button>\r\n                    {/* <Button onClick={e => deleteTableSql('dicom_patient')} type=\"primary\">\r\n                      删除 patient\r\n                    </Button>\r\n                    <Button onClick={e => deleteTableSql('dicom_study')} type=\"primary\">\r\n                      删除 study\r\n                    </Button>\r\n                    <Button onClick={e => deleteTableSql('dicom_series')} type=\"primary\">\r\n                      删除 series\r\n                    </Button>\r\n                    <Button onClick={e => queryData(SQLContainer.queryPatientSql, printLog)} type=\"primary\">\r\n                      查询 patient\r\n                    </Button>\r\n                    <Button onClick={e => queryData(SQLContainer.queryStudySql, printLog)} type=\"primary\">\r\n                      查询 study\r\n                    </Button>\r\n                    <Button onClick={e => queryData(SQLContainer.querySeriesSql, printLog)} type=\"primary\">\r\n                      查询 series\r\n                    </Button>\r\n                    <Button onClick={e => removeDuplicates } type=\"primary\">\r\n                      去重 Patient\r\n                    </Button> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/*<div className=\"table-box\">*/}\r\n              {/*  <header>导入记录</header>*/}\r\n              {/*  <Table*/}\r\n              {/*      columns={importFilesColumns}*/}\r\n              {/*      dataSource={DICOMFiles}*/}\r\n              {/*      onRow={record => {*/}\r\n              {/*        return {*/}\r\n              {/*          onClick: event => {},*/}\r\n              {/*          onDoubleClick: event => {},*/}\r\n              {/*        }*/}\r\n              {/*      }}*/}\r\n              {/*  />*/}\r\n              {/*</div>*/}\r\n              <div className=\"table-box\">\r\n                <header>病人列表</header>\r\n                <Table\r\n                    rowSelection={{\r\n                      ...rowSelection,\r\n                    }}\r\n                    columns={dicomColumns}\r\n                    dataSource={patientData}\r\n                    onRow={record => {\r\n                      return {\r\n                        onClick: () => {\r\n                          patientRowClicked(record)\r\n                        },\r\n                        onDoubleClick: event => {\r\n\r\n                          console.log('Patient list: ', patientData)\r\n                          patientGetAll(record)\r\n                        },\r\n                      }\r\n                    }}\r\n                />\r\n              </div>\r\n              <div className=\"table-box\">\r\n                <header>检测记录</header>\r\n                <Table\r\n                    columns={testColumns}\r\n                    dataSource={studyData}\r\n                    onRow={(record, index) => {\r\n                      return {\r\n                        onClick: () => {\r\n                          studyRowClicked(record, index)\r\n                        },\r\n                        onDoubleClick: event => {\r\n                          // history.push(`/viewer/${record.PatientID}`)\r\n                          // console.log('Study list: ', patientData)\r\n                          studyGetAll(record)\r\n                        },\r\n                      }\r\n                    }}\r\n                />\r\n              </div>\r\n              <div className=\"table-box\">\r\n                <header>序列清单</header>\r\n                <Table\r\n                    columns={listColumns}\r\n                    dataSource={seriesData}\r\n                    onRow={(record, index) => {\r\n                      return {\r\n                        onClick: () => {\r\n                          seriesRowClicked(record, index)\r\n                        },\r\n                        onDoubleClick: event => {\r\n                          seriesGetAll(record, index)\r\n                        },\r\n                      }\r\n                    }}\r\n                />\r\n              </div>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudyList\r\n","import React, { useState } from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport './assets/scss/reset.scss'\r\nimport './assets/scss/common.scss'\r\nimport Viewer from './pages/Viewer/Viewer'\r\nimport StudyList from './pages/StudyList/StudyList'\r\n\r\nconst App = () => {\r\n  const [showViewer, setShowViewer] = useState(false)\r\n  const [data, setData] = useState(null)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        {showViewer ? null : <StudyList setShowViewer={setShowViewer} setData={setData} />}\r\n        {showViewer ? <Viewer data={data} setShowViewer={setShowViewer} /> : null}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import dicomParser from 'dicom-parser'\r\nimport cornerstone from 'cornerstone-core'\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader'\r\nimport cornerstoneMath from 'cornerstone-math'\r\nimport cornerstoneTools from 'cornerstone-tools'\r\nimport Hammer from 'hammerjs'\r\n\r\nexport default function initCornerstone() {\r\n  // Cornertone Tools\r\n  cornerstoneTools.external.cornerstone = cornerstone\r\n  cornerstoneTools.external.Hammer = Hammer\r\n  cornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\n\r\n  // 初始化\r\n  cornerstoneTools.init()\r\n\r\n  // Preferences\r\n  const fontFamily =\r\n    'Work Sans, Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif'\r\n  cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`)\r\n  cornerstoneTools.toolStyle.setToolWidth(2)\r\n  cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)')\r\n  cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)')\r\n\r\n  cornerstoneTools.store.state.touchProximity = 40\r\n\r\n  // IMAGE LOADER\r\n  cornerstoneWADOImageLoader.external.cornerstone = cornerstone\r\n  cornerstoneWADOImageLoader.external.dicomParser = dicomParser\r\n  cornerstoneWADOImageLoader.webWorkerManager.initialize({\r\n    maxWebWorkers: navigator.hardwareConcurrency || 1,\r\n    startWebWorkersOnDemand: true,\r\n    taskConfiguration: {\r\n      decodeTask: {\r\n        initializeCodecsOnStartup: false,\r\n        usePDFJS: false,\r\n        strict: false,\r\n      },\r\n    },\r\n  })\r\n\r\n  // Debug\r\n  window.cornerstone = cornerstone\r\n  window.cornerstoneTools = cornerstoneTools\r\n  window.dicomParser = dicomParser\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport initCornerstone from './initCornerstone.js'\r\n\r\n// 初始化\r\ninitCornerstone()\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nreportWebVitals()\r\n\r\n\r\n"],"sourceRoot":""}